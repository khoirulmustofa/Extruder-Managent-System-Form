//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ExtruderManagementSystem_UI {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet_GaugeProfileTread")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet_LotAssuranceTreadBack : global::System.Data.DataSet {
        
        private MASA_Lot_Assurance_Tread_BackDataTable tableMASA_Lot_Assurance_Tread_Back;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet_LotAssuranceTreadBack() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet_LotAssuranceTreadBack(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MASA_Lot_Assurance_Tread_Back"] != null)) {
                    base.Tables.Add(new MASA_Lot_Assurance_Tread_BackDataTable(ds.Tables["MASA_Lot_Assurance_Tread_Back"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MASA_Lot_Assurance_Tread_BackDataTable MASA_Lot_Assurance_Tread_Back {
            get {
                return this.tableMASA_Lot_Assurance_Tread_Back;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet_LotAssuranceTreadBack cln = ((DataSet_LotAssuranceTreadBack)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MASA_Lot_Assurance_Tread_Back"] != null)) {
                    base.Tables.Add(new MASA_Lot_Assurance_Tread_BackDataTable(ds.Tables["MASA_Lot_Assurance_Tread_Back"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableMASA_Lot_Assurance_Tread_Back = ((MASA_Lot_Assurance_Tread_BackDataTable)(base.Tables["MASA_Lot_Assurance_Tread_Back"]));
            if ((initTable == true)) {
                if ((this.tableMASA_Lot_Assurance_Tread_Back != null)) {
                    this.tableMASA_Lot_Assurance_Tread_Back.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet_GaugeProfileTread";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet_GaugeProfileTread.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMASA_Lot_Assurance_Tread_Back = new MASA_Lot_Assurance_Tread_BackDataTable();
            base.Tables.Add(this.tableMASA_Lot_Assurance_Tread_Back);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMASA_Lot_Assurance_Tread_Back() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet_LotAssuranceTreadBack ds = new DataSet_LotAssuranceTreadBack();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MASA_Lot_Assurance_Tread_BackRowChangeEventHandler(object sender, MASA_Lot_Assurance_Tread_BackRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MASA_Lot_Assurance_Tread_BackDataTable : global::System.Data.TypedTableBase<MASA_Lot_Assurance_Tread_BackRow> {
            
            private global::System.Data.DataColumn columnKode_Lot_Assurance_Back;
            
            private global::System.Data.DataColumn columnKode_Order_Tread;
            
            private global::System.Data.DataColumn columnKode_Spec_Tread;
            
            private global::System.Data.DataColumn columnKode_Size_Tread;
            
            private global::System.Data.DataColumn columnKode_Die_Tread;
            
            private global::System.Data.DataColumn columnMachine;
            
            private global::System.Data.DataColumn columnKode_Stamp_Tread;
            
            private global::System.Data.DataColumn columnKode_Stamp_Tread_Act;
            
            private global::System.Data.DataColumn columnHump_Gauge_Top;
            
            private global::System.Data.DataColumn columnHump_Gauge_Top_Act;
            
            private global::System.Data.DataColumn columnCenter_Gauge;
            
            private global::System.Data.DataColumn columnCenter_Gauge_Act;
            
            private global::System.Data.DataColumn columnHump_Gauge_Bot;
            
            private global::System.Data.DataColumn columnHump_Gauge_Bot_Act;
            
            private global::System.Data.DataColumn columnShoulder_Width;
            
            private global::System.Data.DataColumn columnShoulder_Width_Act;
            
            private global::System.Data.DataColumn columnTotal_Width;
            
            private global::System.Data.DataColumn columnTotal_Width_Act;
            
            private global::System.Data.DataColumn columnRunning_Scalle_2;
            
            private global::System.Data.DataColumn columnRunning_Scalle_2_Act;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnExpaired_Date;
            
            private global::System.Data.DataColumn columnStatuss;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_BackDataTable() {
                this.TableName = "MASA_Lot_Assurance_Tread_Back";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MASA_Lot_Assurance_Tread_BackDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MASA_Lot_Assurance_Tread_BackDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Lot_Assurance_BackColumn {
                get {
                    return this.columnKode_Lot_Assurance_Back;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Order_TreadColumn {
                get {
                    return this.columnKode_Order_Tread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Spec_TreadColumn {
                get {
                    return this.columnKode_Spec_Tread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Size_TreadColumn {
                get {
                    return this.columnKode_Size_Tread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Die_TreadColumn {
                get {
                    return this.columnKode_Die_Tread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MachineColumn {
                get {
                    return this.columnMachine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Stamp_TreadColumn {
                get {
                    return this.columnKode_Stamp_Tread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Stamp_Tread_ActColumn {
                get {
                    return this.columnKode_Stamp_Tread_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hump_Gauge_TopColumn {
                get {
                    return this.columnHump_Gauge_Top;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hump_Gauge_Top_ActColumn {
                get {
                    return this.columnHump_Gauge_Top_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Center_GaugeColumn {
                get {
                    return this.columnCenter_Gauge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Center_Gauge_ActColumn {
                get {
                    return this.columnCenter_Gauge_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hump_Gauge_BotColumn {
                get {
                    return this.columnHump_Gauge_Bot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hump_Gauge_Bot_ActColumn {
                get {
                    return this.columnHump_Gauge_Bot_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Shoulder_WidthColumn {
                get {
                    return this.columnShoulder_Width;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Shoulder_Width_ActColumn {
                get {
                    return this.columnShoulder_Width_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Total_WidthColumn {
                get {
                    return this.columnTotal_Width;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Total_Width_ActColumn {
                get {
                    return this.columnTotal_Width_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Running_Scalle_2Column {
                get {
                    return this.columnRunning_Scalle_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Running_Scalle_2_ActColumn {
                get {
                    return this.columnRunning_Scalle_2_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expaired_DateColumn {
                get {
                    return this.columnExpaired_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatussColumn {
                get {
                    return this.columnStatuss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_BackRow this[int index] {
                get {
                    return ((MASA_Lot_Assurance_Tread_BackRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MASA_Lot_Assurance_Tread_BackRowChangeEventHandler MASA_Lot_Assurance_Tread_BackRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MASA_Lot_Assurance_Tread_BackRowChangeEventHandler MASA_Lot_Assurance_Tread_BackRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MASA_Lot_Assurance_Tread_BackRowChangeEventHandler MASA_Lot_Assurance_Tread_BackRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MASA_Lot_Assurance_Tread_BackRowChangeEventHandler MASA_Lot_Assurance_Tread_BackRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMASA_Lot_Assurance_Tread_BackRow(MASA_Lot_Assurance_Tread_BackRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_BackRow AddMASA_Lot_Assurance_Tread_BackRow(
                        string Kode_Lot_Assurance_Back, 
                        string Kode_Order_Tread, 
                        string Kode_Spec_Tread, 
                        string Kode_Size_Tread, 
                        string Kode_Die_Tread, 
                        string Machine, 
                        string Kode_Stamp_Tread, 
                        string Kode_Stamp_Tread_Act, 
                        decimal Hump_Gauge_Top, 
                        decimal Hump_Gauge_Top_Act, 
                        decimal Center_Gauge, 
                        decimal Center_Gauge_Act, 
                        decimal Hump_Gauge_Bot, 
                        decimal Hump_Gauge_Bot_Act, 
                        decimal Shoulder_Width, 
                        decimal Shoulder_Width_Act, 
                        int Total_Width, 
                        int Total_Width_Act, 
                        int Running_Scalle_2, 
                        int Running_Scalle_2_Act, 
                        string UserID, 
                        System.DateTime Create_Date, 
                        System.DateTime Expaired_Date, 
                        bool Statuss) {
                MASA_Lot_Assurance_Tread_BackRow rowMASA_Lot_Assurance_Tread_BackRow = ((MASA_Lot_Assurance_Tread_BackRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Kode_Lot_Assurance_Back,
                        Kode_Order_Tread,
                        Kode_Spec_Tread,
                        Kode_Size_Tread,
                        Kode_Die_Tread,
                        Machine,
                        Kode_Stamp_Tread,
                        Kode_Stamp_Tread_Act,
                        Hump_Gauge_Top,
                        Hump_Gauge_Top_Act,
                        Center_Gauge,
                        Center_Gauge_Act,
                        Hump_Gauge_Bot,
                        Hump_Gauge_Bot_Act,
                        Shoulder_Width,
                        Shoulder_Width_Act,
                        Total_Width,
                        Total_Width_Act,
                        Running_Scalle_2,
                        Running_Scalle_2_Act,
                        UserID,
                        Create_Date,
                        Expaired_Date,
                        Statuss};
                rowMASA_Lot_Assurance_Tread_BackRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMASA_Lot_Assurance_Tread_BackRow);
                return rowMASA_Lot_Assurance_Tread_BackRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_BackRow FindByKode_Lot_Assurance_Back(string Kode_Lot_Assurance_Back) {
                return ((MASA_Lot_Assurance_Tread_BackRow)(this.Rows.Find(new object[] {
                            Kode_Lot_Assurance_Back})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MASA_Lot_Assurance_Tread_BackDataTable cln = ((MASA_Lot_Assurance_Tread_BackDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MASA_Lot_Assurance_Tread_BackDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKode_Lot_Assurance_Back = base.Columns["Kode_Lot_Assurance_Back"];
                this.columnKode_Order_Tread = base.Columns["Kode_Order_Tread"];
                this.columnKode_Spec_Tread = base.Columns["Kode_Spec_Tread"];
                this.columnKode_Size_Tread = base.Columns["Kode_Size_Tread"];
                this.columnKode_Die_Tread = base.Columns["Kode_Die_Tread"];
                this.columnMachine = base.Columns["Machine"];
                this.columnKode_Stamp_Tread = base.Columns["Kode_Stamp_Tread"];
                this.columnKode_Stamp_Tread_Act = base.Columns["Kode_Stamp_Tread_Act"];
                this.columnHump_Gauge_Top = base.Columns["Hump_Gauge_Top"];
                this.columnHump_Gauge_Top_Act = base.Columns["Hump_Gauge_Top_Act"];
                this.columnCenter_Gauge = base.Columns["Center_Gauge"];
                this.columnCenter_Gauge_Act = base.Columns["Center_Gauge_Act"];
                this.columnHump_Gauge_Bot = base.Columns["Hump_Gauge_Bot"];
                this.columnHump_Gauge_Bot_Act = base.Columns["Hump_Gauge_Bot_Act"];
                this.columnShoulder_Width = base.Columns["Shoulder_Width"];
                this.columnShoulder_Width_Act = base.Columns["Shoulder_Width_Act"];
                this.columnTotal_Width = base.Columns["Total_Width"];
                this.columnTotal_Width_Act = base.Columns["Total_Width_Act"];
                this.columnRunning_Scalle_2 = base.Columns["Running_Scalle_2"];
                this.columnRunning_Scalle_2_Act = base.Columns["Running_Scalle_2_Act"];
                this.columnUserID = base.Columns["UserID"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnExpaired_Date = base.Columns["Expaired_Date"];
                this.columnStatuss = base.Columns["Statuss"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKode_Lot_Assurance_Back = new global::System.Data.DataColumn("Kode_Lot_Assurance_Back", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Lot_Assurance_Back);
                this.columnKode_Order_Tread = new global::System.Data.DataColumn("Kode_Order_Tread", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Order_Tread);
                this.columnKode_Spec_Tread = new global::System.Data.DataColumn("Kode_Spec_Tread", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Spec_Tread);
                this.columnKode_Size_Tread = new global::System.Data.DataColumn("Kode_Size_Tread", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Size_Tread);
                this.columnKode_Die_Tread = new global::System.Data.DataColumn("Kode_Die_Tread", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Die_Tread);
                this.columnMachine = new global::System.Data.DataColumn("Machine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMachine);
                this.columnKode_Stamp_Tread = new global::System.Data.DataColumn("Kode_Stamp_Tread", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Stamp_Tread);
                this.columnKode_Stamp_Tread_Act = new global::System.Data.DataColumn("Kode_Stamp_Tread_Act", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Stamp_Tread_Act);
                this.columnHump_Gauge_Top = new global::System.Data.DataColumn("Hump_Gauge_Top", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHump_Gauge_Top);
                this.columnHump_Gauge_Top_Act = new global::System.Data.DataColumn("Hump_Gauge_Top_Act", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHump_Gauge_Top_Act);
                this.columnCenter_Gauge = new global::System.Data.DataColumn("Center_Gauge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCenter_Gauge);
                this.columnCenter_Gauge_Act = new global::System.Data.DataColumn("Center_Gauge_Act", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCenter_Gauge_Act);
                this.columnHump_Gauge_Bot = new global::System.Data.DataColumn("Hump_Gauge_Bot", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHump_Gauge_Bot);
                this.columnHump_Gauge_Bot_Act = new global::System.Data.DataColumn("Hump_Gauge_Bot_Act", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHump_Gauge_Bot_Act);
                this.columnShoulder_Width = new global::System.Data.DataColumn("Shoulder_Width", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulder_Width);
                this.columnShoulder_Width_Act = new global::System.Data.DataColumn("Shoulder_Width_Act", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulder_Width_Act);
                this.columnTotal_Width = new global::System.Data.DataColumn("Total_Width", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Width);
                this.columnTotal_Width_Act = new global::System.Data.DataColumn("Total_Width_Act", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Width_Act);
                this.columnRunning_Scalle_2 = new global::System.Data.DataColumn("Running_Scalle_2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunning_Scalle_2);
                this.columnRunning_Scalle_2_Act = new global::System.Data.DataColumn("Running_Scalle_2_Act", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunning_Scalle_2_Act);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnExpaired_Date = new global::System.Data.DataColumn("Expaired_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpaired_Date);
                this.columnStatuss = new global::System.Data.DataColumn("Statuss", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatuss);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKode_Lot_Assurance_Back}, true));
                this.columnKode_Lot_Assurance_Back.AllowDBNull = false;
                this.columnKode_Lot_Assurance_Back.Unique = true;
                this.columnKode_Lot_Assurance_Back.MaxLength = 50;
                this.columnKode_Order_Tread.MaxLength = 50;
                this.columnKode_Spec_Tread.MaxLength = 50;
                this.columnKode_Size_Tread.MaxLength = 50;
                this.columnKode_Die_Tread.MaxLength = 50;
                this.columnMachine.MaxLength = 50;
                this.columnKode_Stamp_Tread.MaxLength = 50;
                this.columnKode_Stamp_Tread_Act.MaxLength = 50;
                this.columnUserID.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_BackRow NewMASA_Lot_Assurance_Tread_BackRow() {
                return ((MASA_Lot_Assurance_Tread_BackRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MASA_Lot_Assurance_Tread_BackRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MASA_Lot_Assurance_Tread_BackRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MASA_Lot_Assurance_Tread_BackRowChanged != null)) {
                    this.MASA_Lot_Assurance_Tread_BackRowChanged(this, new MASA_Lot_Assurance_Tread_BackRowChangeEvent(((MASA_Lot_Assurance_Tread_BackRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MASA_Lot_Assurance_Tread_BackRowChanging != null)) {
                    this.MASA_Lot_Assurance_Tread_BackRowChanging(this, new MASA_Lot_Assurance_Tread_BackRowChangeEvent(((MASA_Lot_Assurance_Tread_BackRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MASA_Lot_Assurance_Tread_BackRowDeleted != null)) {
                    this.MASA_Lot_Assurance_Tread_BackRowDeleted(this, new MASA_Lot_Assurance_Tread_BackRowChangeEvent(((MASA_Lot_Assurance_Tread_BackRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MASA_Lot_Assurance_Tread_BackRowDeleting != null)) {
                    this.MASA_Lot_Assurance_Tread_BackRowDeleting(this, new MASA_Lot_Assurance_Tread_BackRowChangeEvent(((MASA_Lot_Assurance_Tread_BackRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMASA_Lot_Assurance_Tread_BackRow(MASA_Lot_Assurance_Tread_BackRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_LotAssuranceTreadBack ds = new DataSet_LotAssuranceTreadBack();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MASA_Lot_Assurance_Tread_BackDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MASA_Lot_Assurance_Tread_BackRow : global::System.Data.DataRow {
            
            private MASA_Lot_Assurance_Tread_BackDataTable tableMASA_Lot_Assurance_Tread_Back;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MASA_Lot_Assurance_Tread_BackRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMASA_Lot_Assurance_Tread_Back = ((MASA_Lot_Assurance_Tread_BackDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Lot_Assurance_Back {
                get {
                    return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Lot_Assurance_BackColumn]));
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Lot_Assurance_BackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Order_Tread {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Order_TreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Order_Tread\' in table \'MASA_Lot_Assurance_Tread_Back\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Order_TreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Spec_Tread {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Spec_TreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Spec_Tread\' in table \'MASA_Lot_Assurance_Tread_Back\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Spec_TreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Size_Tread {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Size_TreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Size_Tread\' in table \'MASA_Lot_Assurance_Tread_Back\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Size_TreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Die_Tread {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Die_TreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Die_Tread\' in table \'MASA_Lot_Assurance_Tread_Back\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Die_TreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Machine {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Back.MachineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Machine\' in table \'MASA_Lot_Assurance_Tread_Back\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.MachineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Stamp_Tread {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Stamp_TreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Stamp_Tread\' in table \'MASA_Lot_Assurance_Tread_Back\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Stamp_TreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Stamp_Tread_Act {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Stamp_Tread_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Stamp_Tread_Act\' in table \'MASA_Lot_Assurance_Tread_Ba" +
                                "ck\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Stamp_Tread_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Hump_Gauge_Top {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_TopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hump_Gauge_Top\' in table \'MASA_Lot_Assurance_Tread_Back\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_TopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Hump_Gauge_Top_Act {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_Top_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hump_Gauge_Top_Act\' in table \'MASA_Lot_Assurance_Tread_Back" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_Top_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Center_Gauge {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Back.Center_GaugeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Center_Gauge\' in table \'MASA_Lot_Assurance_Tread_Back\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Center_GaugeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Center_Gauge_Act {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Back.Center_Gauge_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Center_Gauge_Act\' in table \'MASA_Lot_Assurance_Tread_Back\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Center_Gauge_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Hump_Gauge_Bot {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_BotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hump_Gauge_Bot\' in table \'MASA_Lot_Assurance_Tread_Back\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_BotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Hump_Gauge_Bot_Act {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_Bot_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hump_Gauge_Bot_Act\' in table \'MASA_Lot_Assurance_Tread_Back" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_Bot_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Shoulder_Width {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Back.Shoulder_WidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shoulder_Width\' in table \'MASA_Lot_Assurance_Tread_Back\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Shoulder_WidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Shoulder_Width_Act {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Back.Shoulder_Width_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shoulder_Width_Act\' in table \'MASA_Lot_Assurance_Tread_Back" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Shoulder_Width_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Total_Width {
                get {
                    try {
                        return ((int)(this[this.tableMASA_Lot_Assurance_Tread_Back.Total_WidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Width\' in table \'MASA_Lot_Assurance_Tread_Back\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Total_WidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Total_Width_Act {
                get {
                    try {
                        return ((int)(this[this.tableMASA_Lot_Assurance_Tread_Back.Total_Width_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Width_Act\' in table \'MASA_Lot_Assurance_Tread_Back\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Total_Width_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Running_Scalle_2 {
                get {
                    try {
                        return ((int)(this[this.tableMASA_Lot_Assurance_Tread_Back.Running_Scalle_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Running_Scalle_2\' in table \'MASA_Lot_Assurance_Tread_Back\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Running_Scalle_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Running_Scalle_2_Act {
                get {
                    try {
                        return ((int)(this[this.tableMASA_Lot_Assurance_Tread_Back.Running_Scalle_2_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Running_Scalle_2_Act\' in table \'MASA_Lot_Assurance_Tread_Ba" +
                                "ck\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Running_Scalle_2_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Back.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'MASA_Lot_Assurance_Tread_Back\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMASA_Lot_Assurance_Tread_Back.Create_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Create_Date\' in table \'MASA_Lot_Assurance_Tread_Back\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Expaired_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMASA_Lot_Assurance_Tread_Back.Expaired_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expaired_Date\' in table \'MASA_Lot_Assurance_Tread_Back\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.Expaired_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Statuss {
                get {
                    try {
                        return ((bool)(this[this.tableMASA_Lot_Assurance_Tread_Back.StatussColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Statuss\' in table \'MASA_Lot_Assurance_Tread_Back\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Back.StatussColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Order_TreadNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Kode_Order_TreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Order_TreadNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Order_TreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Spec_TreadNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Kode_Spec_TreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Spec_TreadNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Spec_TreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Size_TreadNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Kode_Size_TreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Size_TreadNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Size_TreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Die_TreadNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Kode_Die_TreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Die_TreadNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Die_TreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMachineNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.MachineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMachineNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.MachineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Stamp_TreadNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Kode_Stamp_TreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Stamp_TreadNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Stamp_TreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Stamp_Tread_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Kode_Stamp_Tread_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Stamp_Tread_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Kode_Stamp_Tread_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHump_Gauge_TopNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_TopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHump_Gauge_TopNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_TopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHump_Gauge_Top_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_Top_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHump_Gauge_Top_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_Top_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCenter_GaugeNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Center_GaugeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCenter_GaugeNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Center_GaugeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCenter_Gauge_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Center_Gauge_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCenter_Gauge_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Center_Gauge_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHump_Gauge_BotNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_BotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHump_Gauge_BotNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_BotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHump_Gauge_Bot_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_Bot_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHump_Gauge_Bot_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Hump_Gauge_Bot_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulder_WidthNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Shoulder_WidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulder_WidthNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Shoulder_WidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulder_Width_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Shoulder_Width_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulder_Width_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Shoulder_Width_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotal_WidthNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Total_WidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotal_WidthNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Total_WidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotal_Width_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Total_Width_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotal_Width_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Total_Width_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRunning_Scalle_2Null() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Running_Scalle_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRunning_Scalle_2Null() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Running_Scalle_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRunning_Scalle_2_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Running_Scalle_2_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRunning_Scalle_2_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Running_Scalle_2_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserIDNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreate_DateNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Create_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreate_DateNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Create_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpaired_DateNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.Expaired_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpaired_DateNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.Expaired_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatussNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Back.StatussColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatussNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Back.StatussColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MASA_Lot_Assurance_Tread_BackRowChangeEvent : global::System.EventArgs {
            
            private MASA_Lot_Assurance_Tread_BackRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_BackRowChangeEvent(MASA_Lot_Assurance_Tread_BackRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_BackRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ExtruderManagementSystem_UI.DataSet_GaugeProfileTreadTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MASA_Lot_Assurance_Tread_BackTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MASA_Lot_Assurance_Tread_BackTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MASA_Lot_Assurance_Tread_Back";
            tableMapping.ColumnMappings.Add("Kode_Lot_Assurance_Back", "Kode_Lot_Assurance_Back");
            tableMapping.ColumnMappings.Add("Kode_Order_Tread", "Kode_Order_Tread");
            tableMapping.ColumnMappings.Add("Kode_Spec_Tread", "Kode_Spec_Tread");
            tableMapping.ColumnMappings.Add("Kode_Size_Tread", "Kode_Size_Tread");
            tableMapping.ColumnMappings.Add("Kode_Die_Tread", "Kode_Die_Tread");
            tableMapping.ColumnMappings.Add("Machine", "Machine");
            tableMapping.ColumnMappings.Add("Kode_Stamp_Tread", "Kode_Stamp_Tread");
            tableMapping.ColumnMappings.Add("Kode_Stamp_Tread_Act", "Kode_Stamp_Tread_Act");
            tableMapping.ColumnMappings.Add("Hump_Gauge_Top", "Hump_Gauge_Top");
            tableMapping.ColumnMappings.Add("Hump_Gauge_Top_Act", "Hump_Gauge_Top_Act");
            tableMapping.ColumnMappings.Add("Center_Gauge", "Center_Gauge");
            tableMapping.ColumnMappings.Add("Center_Gauge_Act", "Center_Gauge_Act");
            tableMapping.ColumnMappings.Add("Hump_Gauge_Bot", "Hump_Gauge_Bot");
            tableMapping.ColumnMappings.Add("Hump_Gauge_Bot_Act", "Hump_Gauge_Bot_Act");
            tableMapping.ColumnMappings.Add("Shoulder_Width", "Shoulder_Width");
            tableMapping.ColumnMappings.Add("Shoulder_Width_Act", "Shoulder_Width_Act");
            tableMapping.ColumnMappings.Add("Total_Width", "Total_Width");
            tableMapping.ColumnMappings.Add("Total_Width_Act", "Total_Width_Act");
            tableMapping.ColumnMappings.Add("Running_Scalle_2", "Running_Scalle_2");
            tableMapping.ColumnMappings.Add("Running_Scalle_2_Act", "Running_Scalle_2_Act");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Expaired_Date", "Expaired_Date");
            tableMapping.ColumnMappings.Add("Statuss", "Statuss");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MASA_Lot_Assurance_Tread_Back] WHERE (([Kode_Lot_Assurance_Bac" +
                "k] = @Original_Kode_Lot_Assurance_Back) AND ((@IsNull_Kode_Order_Tread = 1 AND [" +
                "Kode_Order_Tread] IS NULL) OR ([Kode_Order_Tread] = @Original_Kode_Order_Tread))" +
                " AND ((@IsNull_Kode_Spec_Tread = 1 AND [Kode_Spec_Tread] IS NULL) OR ([Kode_Spec" +
                "_Tread] = @Original_Kode_Spec_Tread)) AND ((@IsNull_Kode_Size_Tread = 1 AND [Kod" +
                "e_Size_Tread] IS NULL) OR ([Kode_Size_Tread] = @Original_Kode_Size_Tread)) AND (" +
                "(@IsNull_Kode_Die_Tread = 1 AND [Kode_Die_Tread] IS NULL) OR ([Kode_Die_Tread] =" +
                " @Original_Kode_Die_Tread)) AND ((@IsNull_Machine = 1 AND [Machine] IS NULL) OR " +
                "([Machine] = @Original_Machine)) AND ((@IsNull_Kode_Stamp_Tread = 1 AND [Kode_St" +
                "amp_Tread] IS NULL) OR ([Kode_Stamp_Tread] = @Original_Kode_Stamp_Tread)) AND ((" +
                "@IsNull_Kode_Stamp_Tread_Act = 1 AND [Kode_Stamp_Tread_Act] IS NULL) OR ([Kode_S" +
                "tamp_Tread_Act] = @Original_Kode_Stamp_Tread_Act)) AND ((@IsNull_Hump_Gauge_Top " +
                "= 1 AND [Hump_Gauge_Top] IS NULL) OR ([Hump_Gauge_Top] = @Original_Hump_Gauge_To" +
                "p)) AND ((@IsNull_Hump_Gauge_Top_Act = 1 AND [Hump_Gauge_Top_Act] IS NULL) OR ([" +
                "Hump_Gauge_Top_Act] = @Original_Hump_Gauge_Top_Act)) AND ((@IsNull_Center_Gauge " +
                "= 1 AND [Center_Gauge] IS NULL) OR ([Center_Gauge] = @Original_Center_Gauge)) AN" +
                "D ((@IsNull_Center_Gauge_Act = 1 AND [Center_Gauge_Act] IS NULL) OR ([Center_Gau" +
                "ge_Act] = @Original_Center_Gauge_Act)) AND ((@IsNull_Hump_Gauge_Bot = 1 AND [Hum" +
                "p_Gauge_Bot] IS NULL) OR ([Hump_Gauge_Bot] = @Original_Hump_Gauge_Bot)) AND ((@I" +
                "sNull_Hump_Gauge_Bot_Act = 1 AND [Hump_Gauge_Bot_Act] IS NULL) OR ([Hump_Gauge_B" +
                "ot_Act] = @Original_Hump_Gauge_Bot_Act)) AND ((@IsNull_Shoulder_Width = 1 AND [S" +
                "houlder_Width] IS NULL) OR ([Shoulder_Width] = @Original_Shoulder_Width)) AND ((" +
                "@IsNull_Shoulder_Width_Act = 1 AND [Shoulder_Width_Act] IS NULL) OR ([Shoulder_W" +
                "idth_Act] = @Original_Shoulder_Width_Act)) AND ((@IsNull_Total_Width = 1 AND [To" +
                "tal_Width] IS NULL) OR ([Total_Width] = @Original_Total_Width)) AND ((@IsNull_To" +
                "tal_Width_Act = 1 AND [Total_Width_Act] IS NULL) OR ([Total_Width_Act] = @Origin" +
                "al_Total_Width_Act)) AND ((@IsNull_Running_Scalle_2 = 1 AND [Running_Scalle_2] I" +
                "S NULL) OR ([Running_Scalle_2] = @Original_Running_Scalle_2)) AND ((@IsNull_Runn" +
                "ing_Scalle_2_Act = 1 AND [Running_Scalle_2_Act] IS NULL) OR ([Running_Scalle_2_A" +
                "ct] = @Original_Running_Scalle_2_Act)) AND ((@IsNull_UserID = 1 AND [UserID] IS " +
                "NULL) OR ([UserID] = @Original_UserID)) AND ((@IsNull_Create_Date = 1 AND [Creat" +
                "e_Date] IS NULL) OR ([Create_Date] = @Original_Create_Date)) AND ((@IsNull_Expai" +
                "red_Date = 1 AND [Expaired_Date] IS NULL) OR ([Expaired_Date] = @Original_Expair" +
                "ed_Date)) AND ((@IsNull_Statuss = 1 AND [Statuss] IS NULL) OR ([Statuss] = @Orig" +
                "inal_Statuss)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Lot_Assurance_Back", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Lot_Assurance_Back", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Order_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Order_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Order_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Order_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Spec_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Spec_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Spec_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Spec_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Size_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Size_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Size_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Size_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Die_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Die_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Machine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Machine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Machine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Machine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Stamp_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Stamp_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Stamp_Tread_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Stamp_Tread_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Hump_Gauge_Top", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hump_Gauge_Top", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hump_Gauge_Top", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Top", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Hump_Gauge_Top_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hump_Gauge_Top_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hump_Gauge_Top_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Top_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Center_Gauge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Center_Gauge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Center_Gauge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Center_Gauge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Center_Gauge_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Center_Gauge_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Center_Gauge_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Center_Gauge_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Hump_Gauge_Bot", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hump_Gauge_Bot", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hump_Gauge_Bot", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Bot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Hump_Gauge_Bot_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hump_Gauge_Bot_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hump_Gauge_Bot_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Bot_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Shoulder_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shoulder_Width", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shoulder_Width", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Shoulder_Width", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Shoulder_Width_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shoulder_Width_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shoulder_Width_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Shoulder_Width_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Width_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Width_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Running_Scalle_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Running_Scalle_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Running_Scalle_2_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_2_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Running_Scalle_2_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_2_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Create_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Expaired_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Expaired_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Expaired_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Expaired_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Statuss", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Statuss", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Statuss", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Statuss", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MASA_Lot_Assurance_Tread_Back] ([Kode_Lot_Assurance_Back], [Kode_Order_Tread], [Kode_Spec_Tread], [Kode_Size_Tread], [Kode_Die_Tread], [Machine], [Kode_Stamp_Tread], [Kode_Stamp_Tread_Act], [Hump_Gauge_Top], [Hump_Gauge_Top_Act], [Center_Gauge], [Center_Gauge_Act], [Hump_Gauge_Bot], [Hump_Gauge_Bot_Act], [Shoulder_Width], [Shoulder_Width_Act], [Total_Width], [Total_Width_Act], [Running_Scalle_2], [Running_Scalle_2_Act], [UserID], [Create_Date], [Expaired_Date], [Statuss]) VALUES (@Kode_Lot_Assurance_Back, @Kode_Order_Tread, @Kode_Spec_Tread, @Kode_Size_Tread, @Kode_Die_Tread, @Machine, @Kode_Stamp_Tread, @Kode_Stamp_Tread_Act, @Hump_Gauge_Top, @Hump_Gauge_Top_Act, @Center_Gauge, @Center_Gauge_Act, @Hump_Gauge_Bot, @Hump_Gauge_Bot_Act, @Shoulder_Width, @Shoulder_Width_Act, @Total_Width, @Total_Width_Act, @Running_Scalle_2, @Running_Scalle_2_Act, @UserID, @Create_Date, @Expaired_Date, @Statuss);
SELECT Kode_Lot_Assurance_Back, Kode_Order_Tread, Kode_Spec_Tread, Kode_Size_Tread, Kode_Die_Tread, Machine, Kode_Stamp_Tread, Kode_Stamp_Tread_Act, Hump_Gauge_Top, Hump_Gauge_Top_Act, Center_Gauge, Center_Gauge_Act, Hump_Gauge_Bot, Hump_Gauge_Bot_Act, Shoulder_Width, Shoulder_Width_Act, Total_Width, Total_Width_Act, Running_Scalle_2, Running_Scalle_2_Act, UserID, Create_Date, Expaired_Date, Statuss FROM MASA_Lot_Assurance_Tread_Back WHERE (Kode_Lot_Assurance_Back = @Kode_Lot_Assurance_Back)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Lot_Assurance_Back", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Lot_Assurance_Back", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Order_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Order_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Spec_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Spec_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Size_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Size_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Die_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Machine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Machine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Stamp_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Stamp_Tread_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hump_Gauge_Top", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Top", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hump_Gauge_Top_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Top_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Center_Gauge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Center_Gauge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Center_Gauge_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Center_Gauge_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hump_Gauge_Bot", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Bot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hump_Gauge_Bot_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Bot_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shoulder_Width", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Shoulder_Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shoulder_Width_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Shoulder_Width_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Width_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Running_Scalle_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Running_Scalle_2_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_2_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Expaired_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Expaired_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Statuss", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Statuss", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[MASA_Lot_Assurance_Tread_Back] SET [Kode_Lot_Assurance_Back] = @Kod" +
                "e_Lot_Assurance_Back, [Kode_Order_Tread] = @Kode_Order_Tread, [Kode_Spec_Tread] " +
                "= @Kode_Spec_Tread, [Kode_Size_Tread] = @Kode_Size_Tread, [Kode_Die_Tread] = @Ko" +
                "de_Die_Tread, [Machine] = @Machine, [Kode_Stamp_Tread] = @Kode_Stamp_Tread, [Kod" +
                "e_Stamp_Tread_Act] = @Kode_Stamp_Tread_Act, [Hump_Gauge_Top] = @Hump_Gauge_Top, " +
                "[Hump_Gauge_Top_Act] = @Hump_Gauge_Top_Act, [Center_Gauge] = @Center_Gauge, [Cen" +
                "ter_Gauge_Act] = @Center_Gauge_Act, [Hump_Gauge_Bot] = @Hump_Gauge_Bot, [Hump_Ga" +
                "uge_Bot_Act] = @Hump_Gauge_Bot_Act, [Shoulder_Width] = @Shoulder_Width, [Shoulde" +
                "r_Width_Act] = @Shoulder_Width_Act, [Total_Width] = @Total_Width, [Total_Width_A" +
                "ct] = @Total_Width_Act, [Running_Scalle_2] = @Running_Scalle_2, [Running_Scalle_" +
                "2_Act] = @Running_Scalle_2_Act, [UserID] = @UserID, [Create_Date] = @Create_Date" +
                ", [Expaired_Date] = @Expaired_Date, [Statuss] = @Statuss WHERE (([Kode_Lot_Assur" +
                "ance_Back] = @Original_Kode_Lot_Assurance_Back) AND ((@IsNull_Kode_Order_Tread =" +
                " 1 AND [Kode_Order_Tread] IS NULL) OR ([Kode_Order_Tread] = @Original_Kode_Order" +
                "_Tread)) AND ((@IsNull_Kode_Spec_Tread = 1 AND [Kode_Spec_Tread] IS NULL) OR ([K" +
                "ode_Spec_Tread] = @Original_Kode_Spec_Tread)) AND ((@IsNull_Kode_Size_Tread = 1 " +
                "AND [Kode_Size_Tread] IS NULL) OR ([Kode_Size_Tread] = @Original_Kode_Size_Tread" +
                ")) AND ((@IsNull_Kode_Die_Tread = 1 AND [Kode_Die_Tread] IS NULL) OR ([Kode_Die_" +
                "Tread] = @Original_Kode_Die_Tread)) AND ((@IsNull_Machine = 1 AND [Machine] IS N" +
                "ULL) OR ([Machine] = @Original_Machine)) AND ((@IsNull_Kode_Stamp_Tread = 1 AND " +
                "[Kode_Stamp_Tread] IS NULL) OR ([Kode_Stamp_Tread] = @Original_Kode_Stamp_Tread)" +
                ") AND ((@IsNull_Kode_Stamp_Tread_Act = 1 AND [Kode_Stamp_Tread_Act] IS NULL) OR " +
                "([Kode_Stamp_Tread_Act] = @Original_Kode_Stamp_Tread_Act)) AND ((@IsNull_Hump_Ga" +
                "uge_Top = 1 AND [Hump_Gauge_Top] IS NULL) OR ([Hump_Gauge_Top] = @Original_Hump_" +
                "Gauge_Top)) AND ((@IsNull_Hump_Gauge_Top_Act = 1 AND [Hump_Gauge_Top_Act] IS NUL" +
                "L) OR ([Hump_Gauge_Top_Act] = @Original_Hump_Gauge_Top_Act)) AND ((@IsNull_Cente" +
                "r_Gauge = 1 AND [Center_Gauge] IS NULL) OR ([Center_Gauge] = @Original_Center_Ga" +
                "uge)) AND ((@IsNull_Center_Gauge_Act = 1 AND [Center_Gauge_Act] IS NULL) OR ([Ce" +
                "nter_Gauge_Act] = @Original_Center_Gauge_Act)) AND ((@IsNull_Hump_Gauge_Bot = 1 " +
                "AND [Hump_Gauge_Bot] IS NULL) OR ([Hump_Gauge_Bot] = @Original_Hump_Gauge_Bot)) " +
                "AND ((@IsNull_Hump_Gauge_Bot_Act = 1 AND [Hump_Gauge_Bot_Act] IS NULL) OR ([Hump" +
                "_Gauge_Bot_Act] = @Original_Hump_Gauge_Bot_Act)) AND ((@IsNull_Shoulder_Width = " +
                "1 AND [Shoulder_Width] IS NULL) OR ([Shoulder_Width] = @Original_Shoulder_Width)" +
                ") AND ((@IsNull_Shoulder_Width_Act = 1 AND [Shoulder_Width_Act] IS NULL) OR ([Sh" +
                "oulder_Width_Act] = @Original_Shoulder_Width_Act)) AND ((@IsNull_Total_Width = 1" +
                " AND [Total_Width] IS NULL) OR ([Total_Width] = @Original_Total_Width)) AND ((@I" +
                "sNull_Total_Width_Act = 1 AND [Total_Width_Act] IS NULL) OR ([Total_Width_Act] =" +
                " @Original_Total_Width_Act)) AND ((@IsNull_Running_Scalle_2 = 1 AND [Running_Sca" +
                "lle_2] IS NULL) OR ([Running_Scalle_2] = @Original_Running_Scalle_2)) AND ((@IsN" +
                "ull_Running_Scalle_2_Act = 1 AND [Running_Scalle_2_Act] IS NULL) OR ([Running_Sc" +
                "alle_2_Act] = @Original_Running_Scalle_2_Act)) AND ((@IsNull_UserID = 1 AND [Use" +
                "rID] IS NULL) OR ([UserID] = @Original_UserID)) AND ((@IsNull_Create_Date = 1 AN" +
                "D [Create_Date] IS NULL) OR ([Create_Date] = @Original_Create_Date)) AND ((@IsNu" +
                "ll_Expaired_Date = 1 AND [Expaired_Date] IS NULL) OR ([Expaired_Date] = @Origina" +
                "l_Expaired_Date)) AND ((@IsNull_Statuss = 1 AND [Statuss] IS NULL) OR ([Statuss]" +
                " = @Original_Statuss)));\r\nSELECT Kode_Lot_Assurance_Back, Kode_Order_Tread, Kode" +
                "_Spec_Tread, Kode_Size_Tread, Kode_Die_Tread, Machine, Kode_Stamp_Tread, Kode_St" +
                "amp_Tread_Act, Hump_Gauge_Top, Hump_Gauge_Top_Act, Center_Gauge, Center_Gauge_Ac" +
                "t, Hump_Gauge_Bot, Hump_Gauge_Bot_Act, Shoulder_Width, Shoulder_Width_Act, Total" +
                "_Width, Total_Width_Act, Running_Scalle_2, Running_Scalle_2_Act, UserID, Create_" +
                "Date, Expaired_Date, Statuss FROM MASA_Lot_Assurance_Tread_Back WHERE (Kode_Lot_" +
                "Assurance_Back = @Kode_Lot_Assurance_Back)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Lot_Assurance_Back", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Lot_Assurance_Back", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Order_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Order_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Spec_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Spec_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Size_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Size_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Die_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Machine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Machine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Stamp_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Stamp_Tread_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hump_Gauge_Top", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Top", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hump_Gauge_Top_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Top_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Center_Gauge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Center_Gauge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Center_Gauge_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Center_Gauge_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hump_Gauge_Bot", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Bot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hump_Gauge_Bot_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Bot_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shoulder_Width", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Shoulder_Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shoulder_Width_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Shoulder_Width_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Width_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Running_Scalle_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Running_Scalle_2_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_2_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Expaired_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Expaired_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Statuss", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Statuss", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Lot_Assurance_Back", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Lot_Assurance_Back", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Order_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Order_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Order_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Order_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Spec_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Spec_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Spec_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Spec_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Size_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Size_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Size_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Size_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Die_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Die_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Machine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Machine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Machine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Machine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Stamp_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Stamp_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Stamp_Tread_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Stamp_Tread_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Hump_Gauge_Top", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hump_Gauge_Top", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hump_Gauge_Top", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Top", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Hump_Gauge_Top_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hump_Gauge_Top_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hump_Gauge_Top_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Top_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Center_Gauge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Center_Gauge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Center_Gauge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Center_Gauge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Center_Gauge_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Center_Gauge_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Center_Gauge_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Center_Gauge_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Hump_Gauge_Bot", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hump_Gauge_Bot", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hump_Gauge_Bot", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Bot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Hump_Gauge_Bot_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hump_Gauge_Bot_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hump_Gauge_Bot_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Hump_Gauge_Bot_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Shoulder_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shoulder_Width", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shoulder_Width", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Shoulder_Width", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Shoulder_Width_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shoulder_Width_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shoulder_Width_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Shoulder_Width_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Width_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Width_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Running_Scalle_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Running_Scalle_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Running_Scalle_2_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_2_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Running_Scalle_2_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_2_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Create_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Expaired_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Expaired_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Expaired_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Expaired_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Statuss", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Statuss", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Statuss", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Statuss", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExtruderManagementSystem_UI.Properties.Settings.Default.MASA2_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Kode_Lot_Assurance_Back, Kode_Order_Tread, Kode_Spec_Tread, Kode_Size_Tread, Kode_Die_Tread, Machine, Kode_Stamp_Tread, Kode_Stamp_Tread_Act, Hump_Gauge_Top, Hump_Gauge_Top_Act, Center_Gauge, Center_Gauge_Act, Hump_Gauge_Bot, Hump_Gauge_Bot_Act, Shoulder_Width, Shoulder_Width_Act, Total_Width, Total_Width_Act, Running_Scalle_2, Running_Scalle_2_Act, UserID, Create_Date, Expaired_Date, Statuss FROM dbo.MASA_Lot_Assurance_Tread_Back";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_LotAssuranceTreadBack.MASA_Lot_Assurance_Tread_BackDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_LotAssuranceTreadBack.MASA_Lot_Assurance_Tread_BackDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_LotAssuranceTreadBack.MASA_Lot_Assurance_Tread_BackDataTable dataTable = new DataSet_LotAssuranceTreadBack.MASA_Lot_Assurance_Tread_BackDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_LotAssuranceTreadBack.MASA_Lot_Assurance_Tread_BackDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_LotAssuranceTreadBack dataSet) {
            return this.Adapter.Update(dataSet, "MASA_Lot_Assurance_Tread_Back");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_Kode_Lot_Assurance_Back, 
                    string Original_Kode_Order_Tread, 
                    string Original_Kode_Spec_Tread, 
                    string Original_Kode_Size_Tread, 
                    string Original_Kode_Die_Tread, 
                    string Original_Machine, 
                    string Original_Kode_Stamp_Tread, 
                    string Original_Kode_Stamp_Tread_Act, 
                    global::System.Nullable<decimal> Original_Hump_Gauge_Top, 
                    global::System.Nullable<decimal> Original_Hump_Gauge_Top_Act, 
                    global::System.Nullable<decimal> Original_Center_Gauge, 
                    global::System.Nullable<decimal> Original_Center_Gauge_Act, 
                    global::System.Nullable<decimal> Original_Hump_Gauge_Bot, 
                    global::System.Nullable<decimal> Original_Hump_Gauge_Bot_Act, 
                    global::System.Nullable<decimal> Original_Shoulder_Width, 
                    global::System.Nullable<decimal> Original_Shoulder_Width_Act, 
                    global::System.Nullable<int> Original_Total_Width, 
                    global::System.Nullable<int> Original_Total_Width_Act, 
                    global::System.Nullable<int> Original_Running_Scalle_2, 
                    global::System.Nullable<int> Original_Running_Scalle_2_Act, 
                    string Original_UserID, 
                    global::System.Nullable<global::System.DateTime> Original_Create_Date, 
                    global::System.Nullable<global::System.DateTime> Original_Expaired_Date, 
                    global::System.Nullable<bool> Original_Statuss) {
            if ((Original_Kode_Lot_Assurance_Back == null)) {
                throw new global::System.ArgumentNullException("Original_Kode_Lot_Assurance_Back");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Kode_Lot_Assurance_Back));
            }
            if ((Original_Kode_Order_Tread == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Kode_Order_Tread));
            }
            if ((Original_Kode_Spec_Tread == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Kode_Spec_Tread));
            }
            if ((Original_Kode_Size_Tread == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Kode_Size_Tread));
            }
            if ((Original_Kode_Die_Tread == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Kode_Die_Tread));
            }
            if ((Original_Machine == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Machine));
            }
            if ((Original_Kode_Stamp_Tread == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Kode_Stamp_Tread));
            }
            if ((Original_Kode_Stamp_Tread_Act == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Kode_Stamp_Tread_Act));
            }
            if ((Original_Hump_Gauge_Top.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_Hump_Gauge_Top.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Hump_Gauge_Top_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_Hump_Gauge_Top_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Center_Gauge.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_Center_Gauge.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Center_Gauge_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_Center_Gauge_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Hump_Gauge_Bot.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_Hump_Gauge_Bot.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Hump_Gauge_Bot_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_Hump_Gauge_Bot_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Shoulder_Width.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_Shoulder_Width.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Shoulder_Width_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_Shoulder_Width_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_Width.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_Total_Width.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_Width_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_Total_Width_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Running_Scalle_2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_Running_Scalle_2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_Running_Scalle_2_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_Running_Scalle_2_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_UserID == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_UserID));
            }
            if ((Original_Create_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((System.DateTime)(Original_Create_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_Expaired_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((System.DateTime)(Original_Expaired_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_Statuss.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((bool)(Original_Statuss.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Kode_Lot_Assurance_Back, 
                    string Kode_Order_Tread, 
                    string Kode_Spec_Tread, 
                    string Kode_Size_Tread, 
                    string Kode_Die_Tread, 
                    string Machine, 
                    string Kode_Stamp_Tread, 
                    string Kode_Stamp_Tread_Act, 
                    global::System.Nullable<decimal> Hump_Gauge_Top, 
                    global::System.Nullable<decimal> Hump_Gauge_Top_Act, 
                    global::System.Nullable<decimal> Center_Gauge, 
                    global::System.Nullable<decimal> Center_Gauge_Act, 
                    global::System.Nullable<decimal> Hump_Gauge_Bot, 
                    global::System.Nullable<decimal> Hump_Gauge_Bot_Act, 
                    global::System.Nullable<decimal> Shoulder_Width, 
                    global::System.Nullable<decimal> Shoulder_Width_Act, 
                    global::System.Nullable<int> Total_Width, 
                    global::System.Nullable<int> Total_Width_Act, 
                    global::System.Nullable<int> Running_Scalle_2, 
                    global::System.Nullable<int> Running_Scalle_2_Act, 
                    string UserID, 
                    global::System.Nullable<global::System.DateTime> Create_Date, 
                    global::System.Nullable<global::System.DateTime> Expaired_Date, 
                    global::System.Nullable<bool> Statuss) {
            if ((Kode_Lot_Assurance_Back == null)) {
                throw new global::System.ArgumentNullException("Kode_Lot_Assurance_Back");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Kode_Lot_Assurance_Back));
            }
            if ((Kode_Order_Tread == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Kode_Order_Tread));
            }
            if ((Kode_Spec_Tread == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Kode_Spec_Tread));
            }
            if ((Kode_Size_Tread == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Kode_Size_Tread));
            }
            if ((Kode_Die_Tread == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Kode_Die_Tread));
            }
            if ((Machine == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Machine));
            }
            if ((Kode_Stamp_Tread == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Kode_Stamp_Tread));
            }
            if ((Kode_Stamp_Tread_Act == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Kode_Stamp_Tread_Act));
            }
            if ((Hump_Gauge_Top.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(Hump_Gauge_Top.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Hump_Gauge_Top_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(Hump_Gauge_Top_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Center_Gauge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(Center_Gauge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Center_Gauge_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(Center_Gauge_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Hump_Gauge_Bot.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(Hump_Gauge_Bot.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Hump_Gauge_Bot_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(Hump_Gauge_Bot_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Shoulder_Width.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(Shoulder_Width.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Shoulder_Width_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(Shoulder_Width_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Total_Width.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Total_Width.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Total_Width_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(Total_Width_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Running_Scalle_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(Running_Scalle_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Running_Scalle_2_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(Running_Scalle_2_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((UserID == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(UserID));
            }
            if ((Create_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(Create_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Expaired_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(Expaired_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Statuss.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(Statuss.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Kode_Lot_Assurance_Back, 
                    string Kode_Order_Tread, 
                    string Kode_Spec_Tread, 
                    string Kode_Size_Tread, 
                    string Kode_Die_Tread, 
                    string Machine, 
                    string Kode_Stamp_Tread, 
                    string Kode_Stamp_Tread_Act, 
                    global::System.Nullable<decimal> Hump_Gauge_Top, 
                    global::System.Nullable<decimal> Hump_Gauge_Top_Act, 
                    global::System.Nullable<decimal> Center_Gauge, 
                    global::System.Nullable<decimal> Center_Gauge_Act, 
                    global::System.Nullable<decimal> Hump_Gauge_Bot, 
                    global::System.Nullable<decimal> Hump_Gauge_Bot_Act, 
                    global::System.Nullable<decimal> Shoulder_Width, 
                    global::System.Nullable<decimal> Shoulder_Width_Act, 
                    global::System.Nullable<int> Total_Width, 
                    global::System.Nullable<int> Total_Width_Act, 
                    global::System.Nullable<int> Running_Scalle_2, 
                    global::System.Nullable<int> Running_Scalle_2_Act, 
                    string UserID, 
                    global::System.Nullable<global::System.DateTime> Create_Date, 
                    global::System.Nullable<global::System.DateTime> Expaired_Date, 
                    global::System.Nullable<bool> Statuss, 
                    string Original_Kode_Lot_Assurance_Back, 
                    string Original_Kode_Order_Tread, 
                    string Original_Kode_Spec_Tread, 
                    string Original_Kode_Size_Tread, 
                    string Original_Kode_Die_Tread, 
                    string Original_Machine, 
                    string Original_Kode_Stamp_Tread, 
                    string Original_Kode_Stamp_Tread_Act, 
                    global::System.Nullable<decimal> Original_Hump_Gauge_Top, 
                    global::System.Nullable<decimal> Original_Hump_Gauge_Top_Act, 
                    global::System.Nullable<decimal> Original_Center_Gauge, 
                    global::System.Nullable<decimal> Original_Center_Gauge_Act, 
                    global::System.Nullable<decimal> Original_Hump_Gauge_Bot, 
                    global::System.Nullable<decimal> Original_Hump_Gauge_Bot_Act, 
                    global::System.Nullable<decimal> Original_Shoulder_Width, 
                    global::System.Nullable<decimal> Original_Shoulder_Width_Act, 
                    global::System.Nullable<int> Original_Total_Width, 
                    global::System.Nullable<int> Original_Total_Width_Act, 
                    global::System.Nullable<int> Original_Running_Scalle_2, 
                    global::System.Nullable<int> Original_Running_Scalle_2_Act, 
                    string Original_UserID, 
                    global::System.Nullable<global::System.DateTime> Original_Create_Date, 
                    global::System.Nullable<global::System.DateTime> Original_Expaired_Date, 
                    global::System.Nullable<bool> Original_Statuss) {
            if ((Kode_Lot_Assurance_Back == null)) {
                throw new global::System.ArgumentNullException("Kode_Lot_Assurance_Back");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Kode_Lot_Assurance_Back));
            }
            if ((Kode_Order_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Kode_Order_Tread));
            }
            if ((Kode_Spec_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Kode_Spec_Tread));
            }
            if ((Kode_Size_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Kode_Size_Tread));
            }
            if ((Kode_Die_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Kode_Die_Tread));
            }
            if ((Machine == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Machine));
            }
            if ((Kode_Stamp_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Kode_Stamp_Tread));
            }
            if ((Kode_Stamp_Tread_Act == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Kode_Stamp_Tread_Act));
            }
            if ((Hump_Gauge_Top.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Hump_Gauge_Top.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Hump_Gauge_Top_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Hump_Gauge_Top_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Center_Gauge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Center_Gauge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Center_Gauge_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Center_Gauge_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Hump_Gauge_Bot.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Hump_Gauge_Bot.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Hump_Gauge_Bot_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Hump_Gauge_Bot_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Shoulder_Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Shoulder_Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Shoulder_Width_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Shoulder_Width_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Total_Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Total_Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Total_Width_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Total_Width_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Running_Scalle_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Running_Scalle_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Running_Scalle_2_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Running_Scalle_2_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((UserID == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(UserID));
            }
            if ((Create_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Create_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Expaired_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Expaired_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Statuss.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(Statuss.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Kode_Lot_Assurance_Back == null)) {
                throw new global::System.ArgumentNullException("Original_Kode_Lot_Assurance_Back");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Kode_Lot_Assurance_Back));
            }
            if ((Original_Kode_Order_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Kode_Order_Tread));
            }
            if ((Original_Kode_Spec_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Kode_Spec_Tread));
            }
            if ((Original_Kode_Size_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Kode_Size_Tread));
            }
            if ((Original_Kode_Die_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Kode_Die_Tread));
            }
            if ((Original_Machine == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Machine));
            }
            if ((Original_Kode_Stamp_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Kode_Stamp_Tread));
            }
            if ((Original_Kode_Stamp_Tread_Act == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_Kode_Stamp_Tread_Act));
            }
            if ((Original_Hump_Gauge_Top.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_Hump_Gauge_Top.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Hump_Gauge_Top_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(Original_Hump_Gauge_Top_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_Center_Gauge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(Original_Center_Gauge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_Center_Gauge_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(Original_Center_Gauge_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_Hump_Gauge_Bot.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(Original_Hump_Gauge_Bot.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_Hump_Gauge_Bot_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(Original_Hump_Gauge_Bot_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_Shoulder_Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(Original_Shoulder_Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_Shoulder_Width_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(Original_Shoulder_Width_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(Original_Total_Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_Width_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Original_Total_Width_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_Running_Scalle_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_Running_Scalle_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_Running_Scalle_2_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(Original_Running_Scalle_2_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_UserID == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_UserID));
            }
            if ((Original_Create_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTime)(Original_Create_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_Expaired_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((System.DateTime)(Original_Expaired_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_Statuss.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(Original_Statuss.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Kode_Order_Tread, 
                    string Kode_Spec_Tread, 
                    string Kode_Size_Tread, 
                    string Kode_Die_Tread, 
                    string Machine, 
                    string Kode_Stamp_Tread, 
                    string Kode_Stamp_Tread_Act, 
                    global::System.Nullable<decimal> Hump_Gauge_Top, 
                    global::System.Nullable<decimal> Hump_Gauge_Top_Act, 
                    global::System.Nullable<decimal> Center_Gauge, 
                    global::System.Nullable<decimal> Center_Gauge_Act, 
                    global::System.Nullable<decimal> Hump_Gauge_Bot, 
                    global::System.Nullable<decimal> Hump_Gauge_Bot_Act, 
                    global::System.Nullable<decimal> Shoulder_Width, 
                    global::System.Nullable<decimal> Shoulder_Width_Act, 
                    global::System.Nullable<int> Total_Width, 
                    global::System.Nullable<int> Total_Width_Act, 
                    global::System.Nullable<int> Running_Scalle_2, 
                    global::System.Nullable<int> Running_Scalle_2_Act, 
                    string UserID, 
                    global::System.Nullable<global::System.DateTime> Create_Date, 
                    global::System.Nullable<global::System.DateTime> Expaired_Date, 
                    global::System.Nullable<bool> Statuss, 
                    string Original_Kode_Lot_Assurance_Back, 
                    string Original_Kode_Order_Tread, 
                    string Original_Kode_Spec_Tread, 
                    string Original_Kode_Size_Tread, 
                    string Original_Kode_Die_Tread, 
                    string Original_Machine, 
                    string Original_Kode_Stamp_Tread, 
                    string Original_Kode_Stamp_Tread_Act, 
                    global::System.Nullable<decimal> Original_Hump_Gauge_Top, 
                    global::System.Nullable<decimal> Original_Hump_Gauge_Top_Act, 
                    global::System.Nullable<decimal> Original_Center_Gauge, 
                    global::System.Nullable<decimal> Original_Center_Gauge_Act, 
                    global::System.Nullable<decimal> Original_Hump_Gauge_Bot, 
                    global::System.Nullable<decimal> Original_Hump_Gauge_Bot_Act, 
                    global::System.Nullable<decimal> Original_Shoulder_Width, 
                    global::System.Nullable<decimal> Original_Shoulder_Width_Act, 
                    global::System.Nullable<int> Original_Total_Width, 
                    global::System.Nullable<int> Original_Total_Width_Act, 
                    global::System.Nullable<int> Original_Running_Scalle_2, 
                    global::System.Nullable<int> Original_Running_Scalle_2_Act, 
                    string Original_UserID, 
                    global::System.Nullable<global::System.DateTime> Original_Create_Date, 
                    global::System.Nullable<global::System.DateTime> Original_Expaired_Date, 
                    global::System.Nullable<bool> Original_Statuss) {
            return this.Update(Original_Kode_Lot_Assurance_Back, Kode_Order_Tread, Kode_Spec_Tread, Kode_Size_Tread, Kode_Die_Tread, Machine, Kode_Stamp_Tread, Kode_Stamp_Tread_Act, Hump_Gauge_Top, Hump_Gauge_Top_Act, Center_Gauge, Center_Gauge_Act, Hump_Gauge_Bot, Hump_Gauge_Bot_Act, Shoulder_Width, Shoulder_Width_Act, Total_Width, Total_Width_Act, Running_Scalle_2, Running_Scalle_2_Act, UserID, Create_Date, Expaired_Date, Statuss, Original_Kode_Lot_Assurance_Back, Original_Kode_Order_Tread, Original_Kode_Spec_Tread, Original_Kode_Size_Tread, Original_Kode_Die_Tread, Original_Machine, Original_Kode_Stamp_Tread, Original_Kode_Stamp_Tread_Act, Original_Hump_Gauge_Top, Original_Hump_Gauge_Top_Act, Original_Center_Gauge, Original_Center_Gauge_Act, Original_Hump_Gauge_Bot, Original_Hump_Gauge_Bot_Act, Original_Shoulder_Width, Original_Shoulder_Width_Act, Original_Total_Width, Original_Total_Width_Act, Original_Running_Scalle_2, Original_Running_Scalle_2_Act, Original_UserID, Original_Create_Date, Original_Expaired_Date, Original_Statuss);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private MASA_Lot_Assurance_Tread_BackTableAdapter _mASA_Lot_Assurance_Tread_BackTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MASA_Lot_Assurance_Tread_BackTableAdapter MASA_Lot_Assurance_Tread_BackTableAdapter {
            get {
                return this._mASA_Lot_Assurance_Tread_BackTableAdapter;
            }
            set {
                this._mASA_Lot_Assurance_Tread_BackTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._mASA_Lot_Assurance_Tread_BackTableAdapter != null) 
                            && (this._mASA_Lot_Assurance_Tread_BackTableAdapter.Connection != null))) {
                    return this._mASA_Lot_Assurance_Tread_BackTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._mASA_Lot_Assurance_Tread_BackTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet_LotAssuranceTreadBack dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mASA_Lot_Assurance_Tread_BackTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MASA_Lot_Assurance_Tread_Back.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mASA_Lot_Assurance_Tread_BackTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet_LotAssuranceTreadBack dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mASA_Lot_Assurance_Tread_BackTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MASA_Lot_Assurance_Tread_Back.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mASA_Lot_Assurance_Tread_BackTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet_LotAssuranceTreadBack dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mASA_Lot_Assurance_Tread_BackTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MASA_Lot_Assurance_Tread_Back.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mASA_Lot_Assurance_Tread_BackTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet_LotAssuranceTreadBack dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._mASA_Lot_Assurance_Tread_BackTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mASA_Lot_Assurance_Tread_BackTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._mASA_Lot_Assurance_Tread_BackTableAdapter != null)) {
                    revertConnections.Add(this._mASA_Lot_Assurance_Tread_BackTableAdapter, this._mASA_Lot_Assurance_Tread_BackTableAdapter.Connection);
                    this._mASA_Lot_Assurance_Tread_BackTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mASA_Lot_Assurance_Tread_BackTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mASA_Lot_Assurance_Tread_BackTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mASA_Lot_Assurance_Tread_BackTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mASA_Lot_Assurance_Tread_BackTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._mASA_Lot_Assurance_Tread_BackTableAdapter != null)) {
                    this._mASA_Lot_Assurance_Tread_BackTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mASA_Lot_Assurance_Tread_BackTableAdapter]));
                    this._mASA_Lot_Assurance_Tread_BackTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591