//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ExtruderManagementSystem_UI {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet_LotAssuranceTreadFront")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet_LotAssuranceTreadFront : global::System.Data.DataSet {
        
        private MASA_Lot_Assurance_Tread_FrontDataTable tableMASA_Lot_Assurance_Tread_Front;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet_LotAssuranceTreadFront() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet_LotAssuranceTreadFront(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MASA_Lot_Assurance_Tread_Front"] != null)) {
                    base.Tables.Add(new MASA_Lot_Assurance_Tread_FrontDataTable(ds.Tables["MASA_Lot_Assurance_Tread_Front"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MASA_Lot_Assurance_Tread_FrontDataTable MASA_Lot_Assurance_Tread_Front {
            get {
                return this.tableMASA_Lot_Assurance_Tread_Front;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet_LotAssuranceTreadFront cln = ((DataSet_LotAssuranceTreadFront)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MASA_Lot_Assurance_Tread_Front"] != null)) {
                    base.Tables.Add(new MASA_Lot_Assurance_Tread_FrontDataTable(ds.Tables["MASA_Lot_Assurance_Tread_Front"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableMASA_Lot_Assurance_Tread_Front = ((MASA_Lot_Assurance_Tread_FrontDataTable)(base.Tables["MASA_Lot_Assurance_Tread_Front"]));
            if ((initTable == true)) {
                if ((this.tableMASA_Lot_Assurance_Tread_Front != null)) {
                    this.tableMASA_Lot_Assurance_Tread_Front.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet_LotAssuranceTreadFront";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet_LotAssuranceTreadFront.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMASA_Lot_Assurance_Tread_Front = new MASA_Lot_Assurance_Tread_FrontDataTable();
            base.Tables.Add(this.tableMASA_Lot_Assurance_Tread_Front);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMASA_Lot_Assurance_Tread_Front() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet_LotAssuranceTreadFront ds = new DataSet_LotAssuranceTreadFront();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MASA_Lot_Assurance_Tread_FrontRowChangeEventHandler(object sender, MASA_Lot_Assurance_Tread_FrontRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MASA_Lot_Assurance_Tread_FrontDataTable : global::System.Data.TypedTableBase<MASA_Lot_Assurance_Tread_FrontRow> {
            
            private global::System.Data.DataColumn columnKode_Lot_Assurance_Front;
            
            private global::System.Data.DataColumn columnKode_Order_Tread;
            
            private global::System.Data.DataColumn columnKode_Spec_Tread;
            
            private global::System.Data.DataColumn columnKode_Size_Tread;
            
            private global::System.Data.DataColumn columnKode_Die_Tread;
            
            private global::System.Data.DataColumn columnKode_Die_Tread_Act;
            
            private global::System.Data.DataColumn columnMachine;
            
            private global::System.Data.DataColumn columnPreformer_No;
            
            private global::System.Data.DataColumn columnPreformer_No_Act;
            
            private global::System.Data.DataColumn columnInsert_No;
            
            private global::System.Data.DataColumn columnInsert_No_Act;
            
            private global::System.Data.DataColumn columnKode_Compd;
            
            private global::System.Data.DataColumn columnKode_Compd_Act;
            
            private global::System.Data.DataColumn columnKode_Stamp_Tread;
            
            private global::System.Data.DataColumn columnKode_Stamp_Tread_Act;
            
            private global::System.Data.DataColumn columnCompd_Cap;
            
            private global::System.Data.DataColumn columnCompd_Cap_FM;
            
            private global::System.Data.DataColumn columnCompd_Cap_RT;
            
            private global::System.Data.DataColumn columnCompd_Base;
            
            private global::System.Data.DataColumn columnCompd_Base_FM;
            
            private global::System.Data.DataColumn columnCompd_Base_RT;
            
            private global::System.Data.DataColumn columnCompd_Wing;
            
            private global::System.Data.DataColumn columnCompd_Wing_FM;
            
            private global::System.Data.DataColumn columnCompd_Wing_RT;
            
            private global::System.Data.DataColumn columnCompd_Under_Tread;
            
            private global::System.Data.DataColumn columnCompd_Under_Tread_FM;
            
            private global::System.Data.DataColumn columnCompd_Under_Tread_RT;
            
            private global::System.Data.DataColumn columnSpeed_Screw_Cap;
            
            private global::System.Data.DataColumn columnSpeed_Screw_Cap_Act;
            
            private global::System.Data.DataColumn columnSpeed_Screw_Base;
            
            private global::System.Data.DataColumn columnSpeed_Screw_Base_Act;
            
            private global::System.Data.DataColumn columnSpeed_Screw_Wing;
            
            private global::System.Data.DataColumn columnSpeed_Screw_Wing_Act;
            
            private global::System.Data.DataColumn columnSpeed_Screw_Undet_Tread;
            
            private global::System.Data.DataColumn columnSpeed_Screw_Undet_Tread_Act;
            
            private global::System.Data.DataColumn columnSpeed_Line;
            
            private global::System.Data.DataColumn columnSpeed_Line_Act;
            
            private global::System.Data.DataColumn columnTotal_Width;
            
            private global::System.Data.DataColumn columnTotal_Width_Setting;
            
            private global::System.Data.DataColumn columnTotal_Width_Setting_Act;
            
            private global::System.Data.DataColumn columnRunning_Scalle_1;
            
            private global::System.Data.DataColumn columnRunning_Scalle_1_Act;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnStatuss;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_FrontDataTable() {
                this.TableName = "MASA_Lot_Assurance_Tread_Front";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MASA_Lot_Assurance_Tread_FrontDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MASA_Lot_Assurance_Tread_FrontDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Lot_Assurance_FrontColumn {
                get {
                    return this.columnKode_Lot_Assurance_Front;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Order_TreadColumn {
                get {
                    return this.columnKode_Order_Tread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Spec_TreadColumn {
                get {
                    return this.columnKode_Spec_Tread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Size_TreadColumn {
                get {
                    return this.columnKode_Size_Tread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Die_TreadColumn {
                get {
                    return this.columnKode_Die_Tread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Die_Tread_ActColumn {
                get {
                    return this.columnKode_Die_Tread_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MachineColumn {
                get {
                    return this.columnMachine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Preformer_NoColumn {
                get {
                    return this.columnPreformer_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Preformer_No_ActColumn {
                get {
                    return this.columnPreformer_No_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Insert_NoColumn {
                get {
                    return this.columnInsert_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Insert_No_ActColumn {
                get {
                    return this.columnInsert_No_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_CompdColumn {
                get {
                    return this.columnKode_Compd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Compd_ActColumn {
                get {
                    return this.columnKode_Compd_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Stamp_TreadColumn {
                get {
                    return this.columnKode_Stamp_Tread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Kode_Stamp_Tread_ActColumn {
                get {
                    return this.columnKode_Stamp_Tread_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Compd_CapColumn {
                get {
                    return this.columnCompd_Cap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Compd_Cap_FMColumn {
                get {
                    return this.columnCompd_Cap_FM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Compd_Cap_RTColumn {
                get {
                    return this.columnCompd_Cap_RT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Compd_BaseColumn {
                get {
                    return this.columnCompd_Base;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Compd_Base_FMColumn {
                get {
                    return this.columnCompd_Base_FM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Compd_Base_RTColumn {
                get {
                    return this.columnCompd_Base_RT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Compd_WingColumn {
                get {
                    return this.columnCompd_Wing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Compd_Wing_FMColumn {
                get {
                    return this.columnCompd_Wing_FM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Compd_Wing_RTColumn {
                get {
                    return this.columnCompd_Wing_RT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Compd_Under_TreadColumn {
                get {
                    return this.columnCompd_Under_Tread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Compd_Under_Tread_FMColumn {
                get {
                    return this.columnCompd_Under_Tread_FM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Compd_Under_Tread_RTColumn {
                get {
                    return this.columnCompd_Under_Tread_RT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Speed_Screw_CapColumn {
                get {
                    return this.columnSpeed_Screw_Cap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Speed_Screw_Cap_ActColumn {
                get {
                    return this.columnSpeed_Screw_Cap_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Speed_Screw_BaseColumn {
                get {
                    return this.columnSpeed_Screw_Base;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Speed_Screw_Base_ActColumn {
                get {
                    return this.columnSpeed_Screw_Base_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Speed_Screw_WingColumn {
                get {
                    return this.columnSpeed_Screw_Wing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Speed_Screw_Wing_ActColumn {
                get {
                    return this.columnSpeed_Screw_Wing_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Speed_Screw_Undet_TreadColumn {
                get {
                    return this.columnSpeed_Screw_Undet_Tread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Speed_Screw_Undet_Tread_ActColumn {
                get {
                    return this.columnSpeed_Screw_Undet_Tread_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Speed_LineColumn {
                get {
                    return this.columnSpeed_Line;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Speed_Line_ActColumn {
                get {
                    return this.columnSpeed_Line_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Total_WidthColumn {
                get {
                    return this.columnTotal_Width;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Total_Width_SettingColumn {
                get {
                    return this.columnTotal_Width_Setting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Total_Width_Setting_ActColumn {
                get {
                    return this.columnTotal_Width_Setting_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Running_Scalle_1Column {
                get {
                    return this.columnRunning_Scalle_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Running_Scalle_1_ActColumn {
                get {
                    return this.columnRunning_Scalle_1_Act;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatussColumn {
                get {
                    return this.columnStatuss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_FrontRow this[int index] {
                get {
                    return ((MASA_Lot_Assurance_Tread_FrontRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MASA_Lot_Assurance_Tread_FrontRowChangeEventHandler MASA_Lot_Assurance_Tread_FrontRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MASA_Lot_Assurance_Tread_FrontRowChangeEventHandler MASA_Lot_Assurance_Tread_FrontRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MASA_Lot_Assurance_Tread_FrontRowChangeEventHandler MASA_Lot_Assurance_Tread_FrontRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MASA_Lot_Assurance_Tread_FrontRowChangeEventHandler MASA_Lot_Assurance_Tread_FrontRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMASA_Lot_Assurance_Tread_FrontRow(MASA_Lot_Assurance_Tread_FrontRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_FrontRow AddMASA_Lot_Assurance_Tread_FrontRow(
                        string Kode_Lot_Assurance_Front, 
                        string Kode_Order_Tread, 
                        string Kode_Spec_Tread, 
                        string Kode_Size_Tread, 
                        string Kode_Die_Tread, 
                        string Kode_Die_Tread_Act, 
                        string Machine, 
                        string Preformer_No, 
                        string Preformer_No_Act, 
                        string Insert_No, 
                        string Insert_No_Act, 
                        string Kode_Compd, 
                        string Kode_Compd_Act, 
                        string Kode_Stamp_Tread, 
                        string Kode_Stamp_Tread_Act, 
                        string Compd_Cap, 
                        string Compd_Cap_FM, 
                        string Compd_Cap_RT, 
                        string Compd_Base, 
                        string Compd_Base_FM, 
                        string Compd_Base_RT, 
                        string Compd_Wing, 
                        string Compd_Wing_FM, 
                        string Compd_Wing_RT, 
                        string Compd_Under_Tread, 
                        string Compd_Under_Tread_FM, 
                        string Compd_Under_Tread_RT, 
                        decimal Speed_Screw_Cap, 
                        decimal Speed_Screw_Cap_Act, 
                        decimal Speed_Screw_Base, 
                        decimal Speed_Screw_Base_Act, 
                        decimal Speed_Screw_Wing, 
                        decimal Speed_Screw_Wing_Act, 
                        decimal Speed_Screw_Undet_Tread, 
                        decimal Speed_Screw_Undet_Tread_Act, 
                        decimal Speed_Line, 
                        decimal Speed_Line_Act, 
                        int Total_Width, 
                        int Total_Width_Setting, 
                        int Total_Width_Setting_Act, 
                        int Running_Scalle_1, 
                        int Running_Scalle_1_Act, 
                        string UserID, 
                        System.DateTime Create_Date, 
                        bool Statuss) {
                MASA_Lot_Assurance_Tread_FrontRow rowMASA_Lot_Assurance_Tread_FrontRow = ((MASA_Lot_Assurance_Tread_FrontRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Kode_Lot_Assurance_Front,
                        Kode_Order_Tread,
                        Kode_Spec_Tread,
                        Kode_Size_Tread,
                        Kode_Die_Tread,
                        Kode_Die_Tread_Act,
                        Machine,
                        Preformer_No,
                        Preformer_No_Act,
                        Insert_No,
                        Insert_No_Act,
                        Kode_Compd,
                        Kode_Compd_Act,
                        Kode_Stamp_Tread,
                        Kode_Stamp_Tread_Act,
                        Compd_Cap,
                        Compd_Cap_FM,
                        Compd_Cap_RT,
                        Compd_Base,
                        Compd_Base_FM,
                        Compd_Base_RT,
                        Compd_Wing,
                        Compd_Wing_FM,
                        Compd_Wing_RT,
                        Compd_Under_Tread,
                        Compd_Under_Tread_FM,
                        Compd_Under_Tread_RT,
                        Speed_Screw_Cap,
                        Speed_Screw_Cap_Act,
                        Speed_Screw_Base,
                        Speed_Screw_Base_Act,
                        Speed_Screw_Wing,
                        Speed_Screw_Wing_Act,
                        Speed_Screw_Undet_Tread,
                        Speed_Screw_Undet_Tread_Act,
                        Speed_Line,
                        Speed_Line_Act,
                        Total_Width,
                        Total_Width_Setting,
                        Total_Width_Setting_Act,
                        Running_Scalle_1,
                        Running_Scalle_1_Act,
                        UserID,
                        Create_Date,
                        Statuss};
                rowMASA_Lot_Assurance_Tread_FrontRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMASA_Lot_Assurance_Tread_FrontRow);
                return rowMASA_Lot_Assurance_Tread_FrontRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_FrontRow FindByKode_Lot_Assurance_Front(string Kode_Lot_Assurance_Front) {
                return ((MASA_Lot_Assurance_Tread_FrontRow)(this.Rows.Find(new object[] {
                            Kode_Lot_Assurance_Front})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MASA_Lot_Assurance_Tread_FrontDataTable cln = ((MASA_Lot_Assurance_Tread_FrontDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MASA_Lot_Assurance_Tread_FrontDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKode_Lot_Assurance_Front = base.Columns["Kode_Lot_Assurance_Front"];
                this.columnKode_Order_Tread = base.Columns["Kode_Order_Tread"];
                this.columnKode_Spec_Tread = base.Columns["Kode_Spec_Tread"];
                this.columnKode_Size_Tread = base.Columns["Kode_Size_Tread"];
                this.columnKode_Die_Tread = base.Columns["Kode_Die_Tread"];
                this.columnKode_Die_Tread_Act = base.Columns["Kode_Die_Tread_Act"];
                this.columnMachine = base.Columns["Machine"];
                this.columnPreformer_No = base.Columns["Preformer_No"];
                this.columnPreformer_No_Act = base.Columns["Preformer_No_Act"];
                this.columnInsert_No = base.Columns["Insert_No"];
                this.columnInsert_No_Act = base.Columns["Insert_No_Act"];
                this.columnKode_Compd = base.Columns["Kode_Compd"];
                this.columnKode_Compd_Act = base.Columns["Kode_Compd_Act"];
                this.columnKode_Stamp_Tread = base.Columns["Kode_Stamp_Tread"];
                this.columnKode_Stamp_Tread_Act = base.Columns["Kode_Stamp_Tread_Act"];
                this.columnCompd_Cap = base.Columns["Compd_Cap"];
                this.columnCompd_Cap_FM = base.Columns["Compd_Cap_FM"];
                this.columnCompd_Cap_RT = base.Columns["Compd_Cap_RT"];
                this.columnCompd_Base = base.Columns["Compd_Base"];
                this.columnCompd_Base_FM = base.Columns["Compd_Base_FM"];
                this.columnCompd_Base_RT = base.Columns["Compd_Base_RT"];
                this.columnCompd_Wing = base.Columns["Compd_Wing"];
                this.columnCompd_Wing_FM = base.Columns["Compd_Wing_FM"];
                this.columnCompd_Wing_RT = base.Columns["Compd_Wing_RT"];
                this.columnCompd_Under_Tread = base.Columns["Compd_Under_Tread"];
                this.columnCompd_Under_Tread_FM = base.Columns["Compd_Under_Tread_FM"];
                this.columnCompd_Under_Tread_RT = base.Columns["Compd_Under_Tread_RT"];
                this.columnSpeed_Screw_Cap = base.Columns["Speed_Screw_Cap"];
                this.columnSpeed_Screw_Cap_Act = base.Columns["Speed_Screw_Cap_Act"];
                this.columnSpeed_Screw_Base = base.Columns["Speed_Screw_Base"];
                this.columnSpeed_Screw_Base_Act = base.Columns["Speed_Screw_Base_Act"];
                this.columnSpeed_Screw_Wing = base.Columns["Speed_Screw_Wing"];
                this.columnSpeed_Screw_Wing_Act = base.Columns["Speed_Screw_Wing_Act"];
                this.columnSpeed_Screw_Undet_Tread = base.Columns["Speed_Screw_Undet_Tread"];
                this.columnSpeed_Screw_Undet_Tread_Act = base.Columns["Speed_Screw_Undet_Tread_Act"];
                this.columnSpeed_Line = base.Columns["Speed_Line"];
                this.columnSpeed_Line_Act = base.Columns["Speed_Line_Act"];
                this.columnTotal_Width = base.Columns["Total_Width"];
                this.columnTotal_Width_Setting = base.Columns["Total_Width_Setting"];
                this.columnTotal_Width_Setting_Act = base.Columns["Total_Width_Setting_Act"];
                this.columnRunning_Scalle_1 = base.Columns["Running_Scalle_1"];
                this.columnRunning_Scalle_1_Act = base.Columns["Running_Scalle_1_Act"];
                this.columnUserID = base.Columns["UserID"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnStatuss = base.Columns["Statuss"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKode_Lot_Assurance_Front = new global::System.Data.DataColumn("Kode_Lot_Assurance_Front", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Lot_Assurance_Front);
                this.columnKode_Order_Tread = new global::System.Data.DataColumn("Kode_Order_Tread", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Order_Tread);
                this.columnKode_Spec_Tread = new global::System.Data.DataColumn("Kode_Spec_Tread", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Spec_Tread);
                this.columnKode_Size_Tread = new global::System.Data.DataColumn("Kode_Size_Tread", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Size_Tread);
                this.columnKode_Die_Tread = new global::System.Data.DataColumn("Kode_Die_Tread", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Die_Tread);
                this.columnKode_Die_Tread_Act = new global::System.Data.DataColumn("Kode_Die_Tread_Act", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Die_Tread_Act);
                this.columnMachine = new global::System.Data.DataColumn("Machine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMachine);
                this.columnPreformer_No = new global::System.Data.DataColumn("Preformer_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreformer_No);
                this.columnPreformer_No_Act = new global::System.Data.DataColumn("Preformer_No_Act", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreformer_No_Act);
                this.columnInsert_No = new global::System.Data.DataColumn("Insert_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsert_No);
                this.columnInsert_No_Act = new global::System.Data.DataColumn("Insert_No_Act", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsert_No_Act);
                this.columnKode_Compd = new global::System.Data.DataColumn("Kode_Compd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Compd);
                this.columnKode_Compd_Act = new global::System.Data.DataColumn("Kode_Compd_Act", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Compd_Act);
                this.columnKode_Stamp_Tread = new global::System.Data.DataColumn("Kode_Stamp_Tread", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Stamp_Tread);
                this.columnKode_Stamp_Tread_Act = new global::System.Data.DataColumn("Kode_Stamp_Tread_Act", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode_Stamp_Tread_Act);
                this.columnCompd_Cap = new global::System.Data.DataColumn("Compd_Cap", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompd_Cap);
                this.columnCompd_Cap_FM = new global::System.Data.DataColumn("Compd_Cap_FM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompd_Cap_FM);
                this.columnCompd_Cap_RT = new global::System.Data.DataColumn("Compd_Cap_RT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompd_Cap_RT);
                this.columnCompd_Base = new global::System.Data.DataColumn("Compd_Base", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompd_Base);
                this.columnCompd_Base_FM = new global::System.Data.DataColumn("Compd_Base_FM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompd_Base_FM);
                this.columnCompd_Base_RT = new global::System.Data.DataColumn("Compd_Base_RT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompd_Base_RT);
                this.columnCompd_Wing = new global::System.Data.DataColumn("Compd_Wing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompd_Wing);
                this.columnCompd_Wing_FM = new global::System.Data.DataColumn("Compd_Wing_FM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompd_Wing_FM);
                this.columnCompd_Wing_RT = new global::System.Data.DataColumn("Compd_Wing_RT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompd_Wing_RT);
                this.columnCompd_Under_Tread = new global::System.Data.DataColumn("Compd_Under_Tread", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompd_Under_Tread);
                this.columnCompd_Under_Tread_FM = new global::System.Data.DataColumn("Compd_Under_Tread_FM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompd_Under_Tread_FM);
                this.columnCompd_Under_Tread_RT = new global::System.Data.DataColumn("Compd_Under_Tread_RT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompd_Under_Tread_RT);
                this.columnSpeed_Screw_Cap = new global::System.Data.DataColumn("Speed_Screw_Cap", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeed_Screw_Cap);
                this.columnSpeed_Screw_Cap_Act = new global::System.Data.DataColumn("Speed_Screw_Cap_Act", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeed_Screw_Cap_Act);
                this.columnSpeed_Screw_Base = new global::System.Data.DataColumn("Speed_Screw_Base", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeed_Screw_Base);
                this.columnSpeed_Screw_Base_Act = new global::System.Data.DataColumn("Speed_Screw_Base_Act", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeed_Screw_Base_Act);
                this.columnSpeed_Screw_Wing = new global::System.Data.DataColumn("Speed_Screw_Wing", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeed_Screw_Wing);
                this.columnSpeed_Screw_Wing_Act = new global::System.Data.DataColumn("Speed_Screw_Wing_Act", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeed_Screw_Wing_Act);
                this.columnSpeed_Screw_Undet_Tread = new global::System.Data.DataColumn("Speed_Screw_Undet_Tread", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeed_Screw_Undet_Tread);
                this.columnSpeed_Screw_Undet_Tread_Act = new global::System.Data.DataColumn("Speed_Screw_Undet_Tread_Act", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeed_Screw_Undet_Tread_Act);
                this.columnSpeed_Line = new global::System.Data.DataColumn("Speed_Line", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeed_Line);
                this.columnSpeed_Line_Act = new global::System.Data.DataColumn("Speed_Line_Act", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeed_Line_Act);
                this.columnTotal_Width = new global::System.Data.DataColumn("Total_Width", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Width);
                this.columnTotal_Width_Setting = new global::System.Data.DataColumn("Total_Width_Setting", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Width_Setting);
                this.columnTotal_Width_Setting_Act = new global::System.Data.DataColumn("Total_Width_Setting_Act", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Width_Setting_Act);
                this.columnRunning_Scalle_1 = new global::System.Data.DataColumn("Running_Scalle_1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunning_Scalle_1);
                this.columnRunning_Scalle_1_Act = new global::System.Data.DataColumn("Running_Scalle_1_Act", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunning_Scalle_1_Act);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnStatuss = new global::System.Data.DataColumn("Statuss", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatuss);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKode_Lot_Assurance_Front}, true));
                this.columnKode_Lot_Assurance_Front.AllowDBNull = false;
                this.columnKode_Lot_Assurance_Front.Unique = true;
                this.columnKode_Lot_Assurance_Front.MaxLength = 50;
                this.columnKode_Order_Tread.MaxLength = 50;
                this.columnKode_Spec_Tread.MaxLength = 50;
                this.columnKode_Size_Tread.MaxLength = 50;
                this.columnKode_Die_Tread.MaxLength = 50;
                this.columnKode_Die_Tread_Act.MaxLength = 50;
                this.columnMachine.MaxLength = 50;
                this.columnPreformer_No.MaxLength = 50;
                this.columnPreformer_No_Act.MaxLength = 50;
                this.columnInsert_No.MaxLength = 50;
                this.columnInsert_No_Act.MaxLength = 50;
                this.columnKode_Compd.MaxLength = 50;
                this.columnKode_Compd_Act.MaxLength = 50;
                this.columnKode_Stamp_Tread.MaxLength = 50;
                this.columnKode_Stamp_Tread_Act.MaxLength = 50;
                this.columnCompd_Cap.MaxLength = 50;
                this.columnCompd_Cap_FM.MaxLength = 50;
                this.columnCompd_Cap_RT.MaxLength = 50;
                this.columnCompd_Base.MaxLength = 50;
                this.columnCompd_Base_FM.MaxLength = 50;
                this.columnCompd_Base_RT.MaxLength = 50;
                this.columnCompd_Wing.MaxLength = 50;
                this.columnCompd_Wing_FM.MaxLength = 50;
                this.columnCompd_Wing_RT.MaxLength = 50;
                this.columnCompd_Under_Tread.MaxLength = 50;
                this.columnCompd_Under_Tread_FM.MaxLength = 50;
                this.columnCompd_Under_Tread_RT.MaxLength = 50;
                this.columnUserID.MaxLength = 25;
                this.columnCreate_Date.AllowDBNull = false;
                this.columnStatuss.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_FrontRow NewMASA_Lot_Assurance_Tread_FrontRow() {
                return ((MASA_Lot_Assurance_Tread_FrontRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MASA_Lot_Assurance_Tread_FrontRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MASA_Lot_Assurance_Tread_FrontRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MASA_Lot_Assurance_Tread_FrontRowChanged != null)) {
                    this.MASA_Lot_Assurance_Tread_FrontRowChanged(this, new MASA_Lot_Assurance_Tread_FrontRowChangeEvent(((MASA_Lot_Assurance_Tread_FrontRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MASA_Lot_Assurance_Tread_FrontRowChanging != null)) {
                    this.MASA_Lot_Assurance_Tread_FrontRowChanging(this, new MASA_Lot_Assurance_Tread_FrontRowChangeEvent(((MASA_Lot_Assurance_Tread_FrontRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MASA_Lot_Assurance_Tread_FrontRowDeleted != null)) {
                    this.MASA_Lot_Assurance_Tread_FrontRowDeleted(this, new MASA_Lot_Assurance_Tread_FrontRowChangeEvent(((MASA_Lot_Assurance_Tread_FrontRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MASA_Lot_Assurance_Tread_FrontRowDeleting != null)) {
                    this.MASA_Lot_Assurance_Tread_FrontRowDeleting(this, new MASA_Lot_Assurance_Tread_FrontRowChangeEvent(((MASA_Lot_Assurance_Tread_FrontRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMASA_Lot_Assurance_Tread_FrontRow(MASA_Lot_Assurance_Tread_FrontRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_LotAssuranceTreadFront ds = new DataSet_LotAssuranceTreadFront();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MASA_Lot_Assurance_Tread_FrontDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MASA_Lot_Assurance_Tread_FrontRow : global::System.Data.DataRow {
            
            private MASA_Lot_Assurance_Tread_FrontDataTable tableMASA_Lot_Assurance_Tread_Front;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MASA_Lot_Assurance_Tread_FrontRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMASA_Lot_Assurance_Tread_Front = ((MASA_Lot_Assurance_Tread_FrontDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Lot_Assurance_Front {
                get {
                    return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Lot_Assurance_FrontColumn]));
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Lot_Assurance_FrontColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Order_Tread {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Order_TreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Order_Tread\' in table \'MASA_Lot_Assurance_Tread_Front\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Order_TreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Spec_Tread {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Spec_TreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Spec_Tread\' in table \'MASA_Lot_Assurance_Tread_Front\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Spec_TreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Size_Tread {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Size_TreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Size_Tread\' in table \'MASA_Lot_Assurance_Tread_Front\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Size_TreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Die_Tread {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Die_TreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Die_Tread\' in table \'MASA_Lot_Assurance_Tread_Front\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Die_TreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Die_Tread_Act {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Die_Tread_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Die_Tread_Act\' in table \'MASA_Lot_Assurance_Tread_Fron" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Die_Tread_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Machine {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.MachineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Machine\' in table \'MASA_Lot_Assurance_Tread_Front\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.MachineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Preformer_No {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Preformer_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Preformer_No\' in table \'MASA_Lot_Assurance_Tread_Front\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Preformer_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Preformer_No_Act {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Preformer_No_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Preformer_No_Act\' in table \'MASA_Lot_Assurance_Tread_Front\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Preformer_No_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Insert_No {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Insert_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Insert_No\' in table \'MASA_Lot_Assurance_Tread_Front\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Insert_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Insert_No_Act {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Insert_No_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Insert_No_Act\' in table \'MASA_Lot_Assurance_Tread_Front\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Insert_No_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Compd {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_CompdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Compd\' in table \'MASA_Lot_Assurance_Tread_Front\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_CompdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Compd_Act {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Compd_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Compd_Act\' in table \'MASA_Lot_Assurance_Tread_Front\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Compd_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Stamp_Tread {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Stamp_TreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Stamp_Tread\' in table \'MASA_Lot_Assurance_Tread_Front\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Stamp_TreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kode_Stamp_Tread_Act {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Stamp_Tread_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode_Stamp_Tread_Act\' in table \'MASA_Lot_Assurance_Tread_Fr" +
                                "ont\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Stamp_Tread_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Compd_Cap {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_CapColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compd_Cap\' in table \'MASA_Lot_Assurance_Tread_Front\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_CapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Compd_Cap_FM {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Cap_FMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compd_Cap_FM\' in table \'MASA_Lot_Assurance_Tread_Front\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Cap_FMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Compd_Cap_RT {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Cap_RTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compd_Cap_RT\' in table \'MASA_Lot_Assurance_Tread_Front\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Cap_RTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Compd_Base {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_BaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compd_Base\' in table \'MASA_Lot_Assurance_Tread_Front\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_BaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Compd_Base_FM {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Base_FMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compd_Base_FM\' in table \'MASA_Lot_Assurance_Tread_Front\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Base_FMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Compd_Base_RT {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Base_RTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compd_Base_RT\' in table \'MASA_Lot_Assurance_Tread_Front\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Base_RTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Compd_Wing {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_WingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compd_Wing\' in table \'MASA_Lot_Assurance_Tread_Front\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_WingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Compd_Wing_FM {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Wing_FMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compd_Wing_FM\' in table \'MASA_Lot_Assurance_Tread_Front\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Wing_FMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Compd_Wing_RT {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Wing_RTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compd_Wing_RT\' in table \'MASA_Lot_Assurance_Tread_Front\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Wing_RTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Compd_Under_Tread {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Under_TreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compd_Under_Tread\' in table \'MASA_Lot_Assurance_Tread_Front" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Under_TreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Compd_Under_Tread_FM {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Under_Tread_FMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compd_Under_Tread_FM\' in table \'MASA_Lot_Assurance_Tread_Fr" +
                                "ont\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Under_Tread_FMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Compd_Under_Tread_RT {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Under_Tread_RTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compd_Under_Tread_RT\' in table \'MASA_Lot_Assurance_Tread_Fr" +
                                "ont\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Under_Tread_RTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Speed_Screw_Cap {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_CapColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speed_Screw_Cap\' in table \'MASA_Lot_Assurance_Tread_Front\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_CapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Speed_Screw_Cap_Act {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Cap_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speed_Screw_Cap_Act\' in table \'MASA_Lot_Assurance_Tread_Fro" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Cap_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Speed_Screw_Base {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_BaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speed_Screw_Base\' in table \'MASA_Lot_Assurance_Tread_Front\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_BaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Speed_Screw_Base_Act {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Base_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speed_Screw_Base_Act\' in table \'MASA_Lot_Assurance_Tread_Fr" +
                                "ont\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Base_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Speed_Screw_Wing {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_WingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speed_Screw_Wing\' in table \'MASA_Lot_Assurance_Tread_Front\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_WingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Speed_Screw_Wing_Act {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Wing_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speed_Screw_Wing_Act\' in table \'MASA_Lot_Assurance_Tread_Fr" +
                                "ont\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Wing_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Speed_Screw_Undet_Tread {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Undet_TreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speed_Screw_Undet_Tread\' in table \'MASA_Lot_Assurance_Tread" +
                                "_Front\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Undet_TreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Speed_Screw_Undet_Tread_Act {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Undet_Tread_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speed_Screw_Undet_Tread_Act\' in table \'MASA_Lot_Assurance_T" +
                                "read_Front\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Undet_Tread_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Speed_Line {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_LineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speed_Line\' in table \'MASA_Lot_Assurance_Tread_Front\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_LineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Speed_Line_Act {
                get {
                    try {
                        return ((decimal)(this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Line_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speed_Line_Act\' in table \'MASA_Lot_Assurance_Tread_Front\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Line_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Total_Width {
                get {
                    try {
                        return ((int)(this[this.tableMASA_Lot_Assurance_Tread_Front.Total_WidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Width\' in table \'MASA_Lot_Assurance_Tread_Front\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Total_WidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Total_Width_Setting {
                get {
                    try {
                        return ((int)(this[this.tableMASA_Lot_Assurance_Tread_Front.Total_Width_SettingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Width_Setting\' in table \'MASA_Lot_Assurance_Tread_Fro" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Total_Width_SettingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Total_Width_Setting_Act {
                get {
                    try {
                        return ((int)(this[this.tableMASA_Lot_Assurance_Tread_Front.Total_Width_Setting_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Width_Setting_Act\' in table \'MASA_Lot_Assurance_Tread" +
                                "_Front\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Total_Width_Setting_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Running_Scalle_1 {
                get {
                    try {
                        return ((int)(this[this.tableMASA_Lot_Assurance_Tread_Front.Running_Scalle_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Running_Scalle_1\' in table \'MASA_Lot_Assurance_Tread_Front\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Running_Scalle_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Running_Scalle_1_Act {
                get {
                    try {
                        return ((int)(this[this.tableMASA_Lot_Assurance_Tread_Front.Running_Scalle_1_ActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Running_Scalle_1_Act\' in table \'MASA_Lot_Assurance_Tread_Fr" +
                                "ont\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Running_Scalle_1_ActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableMASA_Lot_Assurance_Tread_Front.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'MASA_Lot_Assurance_Tread_Front\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableMASA_Lot_Assurance_Tread_Front.Create_DateColumn]));
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Statuss {
                get {
                    return ((bool)(this[this.tableMASA_Lot_Assurance_Tread_Front.StatussColumn]));
                }
                set {
                    this[this.tableMASA_Lot_Assurance_Tread_Front.StatussColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Order_TreadNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Kode_Order_TreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Order_TreadNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Order_TreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Spec_TreadNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Kode_Spec_TreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Spec_TreadNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Spec_TreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Size_TreadNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Kode_Size_TreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Size_TreadNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Size_TreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Die_TreadNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Kode_Die_TreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Die_TreadNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Die_TreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Die_Tread_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Kode_Die_Tread_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Die_Tread_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Die_Tread_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMachineNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.MachineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMachineNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.MachineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPreformer_NoNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Preformer_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPreformer_NoNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Preformer_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPreformer_No_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Preformer_No_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPreformer_No_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Preformer_No_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsert_NoNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Insert_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsert_NoNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Insert_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsert_No_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Insert_No_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsert_No_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Insert_No_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_CompdNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Kode_CompdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_CompdNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_CompdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Compd_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Kode_Compd_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Compd_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Compd_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Stamp_TreadNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Kode_Stamp_TreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Stamp_TreadNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Stamp_TreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKode_Stamp_Tread_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Kode_Stamp_Tread_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKode_Stamp_Tread_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Kode_Stamp_Tread_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompd_CapNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Compd_CapColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompd_CapNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_CapColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompd_Cap_FMNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Compd_Cap_FMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompd_Cap_FMNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Cap_FMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompd_Cap_RTNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Compd_Cap_RTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompd_Cap_RTNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Cap_RTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompd_BaseNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Compd_BaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompd_BaseNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_BaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompd_Base_FMNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Compd_Base_FMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompd_Base_FMNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Base_FMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompd_Base_RTNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Compd_Base_RTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompd_Base_RTNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Base_RTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompd_WingNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Compd_WingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompd_WingNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_WingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompd_Wing_FMNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Compd_Wing_FMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompd_Wing_FMNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Wing_FMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompd_Wing_RTNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Compd_Wing_RTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompd_Wing_RTNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Wing_RTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompd_Under_TreadNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Compd_Under_TreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompd_Under_TreadNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Under_TreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompd_Under_Tread_FMNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Compd_Under_Tread_FMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompd_Under_Tread_FMNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Under_Tread_FMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompd_Under_Tread_RTNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Compd_Under_Tread_RTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompd_Under_Tread_RTNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Compd_Under_Tread_RTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeed_Screw_CapNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_CapColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeed_Screw_CapNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_CapColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeed_Screw_Cap_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Cap_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeed_Screw_Cap_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Cap_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeed_Screw_BaseNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_BaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeed_Screw_BaseNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_BaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeed_Screw_Base_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Base_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeed_Screw_Base_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Base_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeed_Screw_WingNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_WingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeed_Screw_WingNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_WingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeed_Screw_Wing_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Wing_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeed_Screw_Wing_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Wing_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeed_Screw_Undet_TreadNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Undet_TreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeed_Screw_Undet_TreadNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Undet_TreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeed_Screw_Undet_Tread_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Undet_Tread_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeed_Screw_Undet_Tread_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Screw_Undet_Tread_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeed_LineNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Speed_LineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeed_LineNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_LineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeed_Line_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Speed_Line_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeed_Line_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Speed_Line_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotal_WidthNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Total_WidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotal_WidthNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Total_WidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotal_Width_SettingNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Total_Width_SettingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotal_Width_SettingNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Total_Width_SettingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotal_Width_Setting_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Total_Width_Setting_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotal_Width_Setting_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Total_Width_Setting_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRunning_Scalle_1Null() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Running_Scalle_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRunning_Scalle_1Null() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Running_Scalle_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRunning_Scalle_1_ActNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.Running_Scalle_1_ActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRunning_Scalle_1_ActNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.Running_Scalle_1_ActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableMASA_Lot_Assurance_Tread_Front.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserIDNull() {
                this[this.tableMASA_Lot_Assurance_Tread_Front.UserIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MASA_Lot_Assurance_Tread_FrontRowChangeEvent : global::System.EventArgs {
            
            private MASA_Lot_Assurance_Tread_FrontRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_FrontRowChangeEvent(MASA_Lot_Assurance_Tread_FrontRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MASA_Lot_Assurance_Tread_FrontRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ExtruderManagementSystem_UI.DataSet_LotAssuranceTreadFrontTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MASA_Lot_Assurance_Tread_FrontTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MASA_Lot_Assurance_Tread_FrontTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MASA_Lot_Assurance_Tread_Front";
            tableMapping.ColumnMappings.Add("Kode_Lot_Assurance_Front", "Kode_Lot_Assurance_Front");
            tableMapping.ColumnMappings.Add("Kode_Order_Tread", "Kode_Order_Tread");
            tableMapping.ColumnMappings.Add("Kode_Spec_Tread", "Kode_Spec_Tread");
            tableMapping.ColumnMappings.Add("Kode_Size_Tread", "Kode_Size_Tread");
            tableMapping.ColumnMappings.Add("Kode_Die_Tread", "Kode_Die_Tread");
            tableMapping.ColumnMappings.Add("Kode_Die_Tread_Act", "Kode_Die_Tread_Act");
            tableMapping.ColumnMappings.Add("Machine", "Machine");
            tableMapping.ColumnMappings.Add("Preformer_No", "Preformer_No");
            tableMapping.ColumnMappings.Add("Preformer_No_Act", "Preformer_No_Act");
            tableMapping.ColumnMappings.Add("Insert_No", "Insert_No");
            tableMapping.ColumnMappings.Add("Insert_No_Act", "Insert_No_Act");
            tableMapping.ColumnMappings.Add("Kode_Compd", "Kode_Compd");
            tableMapping.ColumnMappings.Add("Kode_Compd_Act", "Kode_Compd_Act");
            tableMapping.ColumnMappings.Add("Kode_Stamp_Tread", "Kode_Stamp_Tread");
            tableMapping.ColumnMappings.Add("Kode_Stamp_Tread_Act", "Kode_Stamp_Tread_Act");
            tableMapping.ColumnMappings.Add("Compd_Cap", "Compd_Cap");
            tableMapping.ColumnMappings.Add("Compd_Cap_FM", "Compd_Cap_FM");
            tableMapping.ColumnMappings.Add("Compd_Cap_RT", "Compd_Cap_RT");
            tableMapping.ColumnMappings.Add("Compd_Base", "Compd_Base");
            tableMapping.ColumnMappings.Add("Compd_Base_FM", "Compd_Base_FM");
            tableMapping.ColumnMappings.Add("Compd_Base_RT", "Compd_Base_RT");
            tableMapping.ColumnMappings.Add("Compd_Wing", "Compd_Wing");
            tableMapping.ColumnMappings.Add("Compd_Wing_FM", "Compd_Wing_FM");
            tableMapping.ColumnMappings.Add("Compd_Wing_RT", "Compd_Wing_RT");
            tableMapping.ColumnMappings.Add("Compd_Under_Tread", "Compd_Under_Tread");
            tableMapping.ColumnMappings.Add("Compd_Under_Tread_FM", "Compd_Under_Tread_FM");
            tableMapping.ColumnMappings.Add("Compd_Under_Tread_RT", "Compd_Under_Tread_RT");
            tableMapping.ColumnMappings.Add("Speed_Screw_Cap", "Speed_Screw_Cap");
            tableMapping.ColumnMappings.Add("Speed_Screw_Cap_Act", "Speed_Screw_Cap_Act");
            tableMapping.ColumnMappings.Add("Speed_Screw_Base", "Speed_Screw_Base");
            tableMapping.ColumnMappings.Add("Speed_Screw_Base_Act", "Speed_Screw_Base_Act");
            tableMapping.ColumnMappings.Add("Speed_Screw_Wing", "Speed_Screw_Wing");
            tableMapping.ColumnMappings.Add("Speed_Screw_Wing_Act", "Speed_Screw_Wing_Act");
            tableMapping.ColumnMappings.Add("Speed_Screw_Undet_Tread", "Speed_Screw_Undet_Tread");
            tableMapping.ColumnMappings.Add("Speed_Screw_Undet_Tread_Act", "Speed_Screw_Undet_Tread_Act");
            tableMapping.ColumnMappings.Add("Speed_Line", "Speed_Line");
            tableMapping.ColumnMappings.Add("Speed_Line_Act", "Speed_Line_Act");
            tableMapping.ColumnMappings.Add("Total_Width", "Total_Width");
            tableMapping.ColumnMappings.Add("Total_Width_Setting", "Total_Width_Setting");
            tableMapping.ColumnMappings.Add("Total_Width_Setting_Act", "Total_Width_Setting_Act");
            tableMapping.ColumnMappings.Add("Running_Scalle_1", "Running_Scalle_1");
            tableMapping.ColumnMappings.Add("Running_Scalle_1_Act", "Running_Scalle_1_Act");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Statuss", "Statuss");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MASA_Lot_Assurance_Tread_Front] WHERE (([Kode_Lot_Assurance_Fr" +
                "ont] = @Original_Kode_Lot_Assurance_Front) AND ((@IsNull_Kode_Order_Tread = 1 AN" +
                "D [Kode_Order_Tread] IS NULL) OR ([Kode_Order_Tread] = @Original_Kode_Order_Trea" +
                "d)) AND ((@IsNull_Kode_Spec_Tread = 1 AND [Kode_Spec_Tread] IS NULL) OR ([Kode_S" +
                "pec_Tread] = @Original_Kode_Spec_Tread)) AND ((@IsNull_Kode_Size_Tread = 1 AND [" +
                "Kode_Size_Tread] IS NULL) OR ([Kode_Size_Tread] = @Original_Kode_Size_Tread)) AN" +
                "D ((@IsNull_Kode_Die_Tread = 1 AND [Kode_Die_Tread] IS NULL) OR ([Kode_Die_Tread" +
                "] = @Original_Kode_Die_Tread)) AND ((@IsNull_Kode_Die_Tread_Act = 1 AND [Kode_Di" +
                "e_Tread_Act] IS NULL) OR ([Kode_Die_Tread_Act] = @Original_Kode_Die_Tread_Act)) " +
                "AND ((@IsNull_Machine = 1 AND [Machine] IS NULL) OR ([Machine] = @Original_Machi" +
                "ne)) AND ((@IsNull_Preformer_No = 1 AND [Preformer_No] IS NULL) OR ([Preformer_N" +
                "o] = @Original_Preformer_No)) AND ((@IsNull_Preformer_No_Act = 1 AND [Preformer_" +
                "No_Act] IS NULL) OR ([Preformer_No_Act] = @Original_Preformer_No_Act)) AND ((@Is" +
                "Null_Insert_No = 1 AND [Insert_No] IS NULL) OR ([Insert_No] = @Original_Insert_N" +
                "o)) AND ((@IsNull_Insert_No_Act = 1 AND [Insert_No_Act] IS NULL) OR ([Insert_No_" +
                "Act] = @Original_Insert_No_Act)) AND ((@IsNull_Kode_Compd = 1 AND [Kode_Compd] I" +
                "S NULL) OR ([Kode_Compd] = @Original_Kode_Compd)) AND ((@IsNull_Kode_Compd_Act =" +
                " 1 AND [Kode_Compd_Act] IS NULL) OR ([Kode_Compd_Act] = @Original_Kode_Compd_Act" +
                ")) AND ((@IsNull_Kode_Stamp_Tread = 1 AND [Kode_Stamp_Tread] IS NULL) OR ([Kode_" +
                "Stamp_Tread] = @Original_Kode_Stamp_Tread)) AND ((@IsNull_Kode_Stamp_Tread_Act =" +
                " 1 AND [Kode_Stamp_Tread_Act] IS NULL) OR ([Kode_Stamp_Tread_Act] = @Original_Ko" +
                "de_Stamp_Tread_Act)) AND ((@IsNull_Compd_Cap = 1 AND [Compd_Cap] IS NULL) OR ([C" +
                "ompd_Cap] = @Original_Compd_Cap)) AND ((@IsNull_Compd_Cap_FM = 1 AND [Compd_Cap_" +
                "FM] IS NULL) OR ([Compd_Cap_FM] = @Original_Compd_Cap_FM)) AND ((@IsNull_Compd_C" +
                "ap_RT = 1 AND [Compd_Cap_RT] IS NULL) OR ([Compd_Cap_RT] = @Original_Compd_Cap_R" +
                "T)) AND ((@IsNull_Compd_Base = 1 AND [Compd_Base] IS NULL) OR ([Compd_Base] = @O" +
                "riginal_Compd_Base)) AND ((@IsNull_Compd_Base_FM = 1 AND [Compd_Base_FM] IS NULL" +
                ") OR ([Compd_Base_FM] = @Original_Compd_Base_FM)) AND ((@IsNull_Compd_Base_RT = " +
                "1 AND [Compd_Base_RT] IS NULL) OR ([Compd_Base_RT] = @Original_Compd_Base_RT)) A" +
                "ND ((@IsNull_Compd_Wing = 1 AND [Compd_Wing] IS NULL) OR ([Compd_Wing] = @Origin" +
                "al_Compd_Wing)) AND ((@IsNull_Compd_Wing_FM = 1 AND [Compd_Wing_FM] IS NULL) OR " +
                "([Compd_Wing_FM] = @Original_Compd_Wing_FM)) AND ((@IsNull_Compd_Wing_RT = 1 AND" +
                " [Compd_Wing_RT] IS NULL) OR ([Compd_Wing_RT] = @Original_Compd_Wing_RT)) AND ((" +
                "@IsNull_Compd_Under_Tread = 1 AND [Compd_Under_Tread] IS NULL) OR ([Compd_Under_" +
                "Tread] = @Original_Compd_Under_Tread)) AND ((@IsNull_Compd_Under_Tread_FM = 1 AN" +
                "D [Compd_Under_Tread_FM] IS NULL) OR ([Compd_Under_Tread_FM] = @Original_Compd_U" +
                "nder_Tread_FM)) AND ((@IsNull_Compd_Under_Tread_RT = 1 AND [Compd_Under_Tread_RT" +
                "] IS NULL) OR ([Compd_Under_Tread_RT] = @Original_Compd_Under_Tread_RT)) AND ((@" +
                "IsNull_Speed_Screw_Cap = 1 AND [Speed_Screw_Cap] IS NULL) OR ([Speed_Screw_Cap] " +
                "= @Original_Speed_Screw_Cap)) AND ((@IsNull_Speed_Screw_Cap_Act = 1 AND [Speed_S" +
                "crew_Cap_Act] IS NULL) OR ([Speed_Screw_Cap_Act] = @Original_Speed_Screw_Cap_Act" +
                ")) AND ((@IsNull_Speed_Screw_Base = 1 AND [Speed_Screw_Base] IS NULL) OR ([Speed" +
                "_Screw_Base] = @Original_Speed_Screw_Base)) AND ((@IsNull_Speed_Screw_Base_Act =" +
                " 1 AND [Speed_Screw_Base_Act] IS NULL) OR ([Speed_Screw_Base_Act] = @Original_Sp" +
                "eed_Screw_Base_Act)) AND ((@IsNull_Speed_Screw_Wing = 1 AND [Speed_Screw_Wing] I" +
                "S NULL) OR ([Speed_Screw_Wing] = @Original_Speed_Screw_Wing)) AND ((@IsNull_Spee" +
                "d_Screw_Wing_Act = 1 AND [Speed_Screw_Wing_Act] IS NULL) OR ([Speed_Screw_Wing_A" +
                "ct] = @Original_Speed_Screw_Wing_Act)) AND ((@IsNull_Speed_Screw_Undet_Tread = 1" +
                " AND [Speed_Screw_Undet_Tread] IS NULL) OR ([Speed_Screw_Undet_Tread] = @Origina" +
                "l_Speed_Screw_Undet_Tread)) AND ((@IsNull_Speed_Screw_Undet_Tread_Act = 1 AND [S" +
                "peed_Screw_Undet_Tread_Act] IS NULL) OR ([Speed_Screw_Undet_Tread_Act] = @Origin" +
                "al_Speed_Screw_Undet_Tread_Act)) AND ((@IsNull_Speed_Line = 1 AND [Speed_Line] I" +
                "S NULL) OR ([Speed_Line] = @Original_Speed_Line)) AND ((@IsNull_Speed_Line_Act =" +
                " 1 AND [Speed_Line_Act] IS NULL) OR ([Speed_Line_Act] = @Original_Speed_Line_Act" +
                ")) AND ((@IsNull_Total_Width = 1 AND [Total_Width] IS NULL) OR ([Total_Width] = " +
                "@Original_Total_Width)) AND ((@IsNull_Total_Width_Setting = 1 AND [Total_Width_S" +
                "etting] IS NULL) OR ([Total_Width_Setting] = @Original_Total_Width_Setting)) AND" +
                " ((@IsNull_Total_Width_Setting_Act = 1 AND [Total_Width_Setting_Act] IS NULL) OR" +
                " ([Total_Width_Setting_Act] = @Original_Total_Width_Setting_Act)) AND ((@IsNull_" +
                "Running_Scalle_1 = 1 AND [Running_Scalle_1] IS NULL) OR ([Running_Scalle_1] = @O" +
                "riginal_Running_Scalle_1)) AND ((@IsNull_Running_Scalle_1_Act = 1 AND [Running_S" +
                "calle_1_Act] IS NULL) OR ([Running_Scalle_1_Act] = @Original_Running_Scalle_1_Ac" +
                "t)) AND ((@IsNull_UserID = 1 AND [UserID] IS NULL) OR ([UserID] = @Original_User" +
                "ID)) AND ([Create_Date] = @Original_Create_Date) AND ([Statuss] = @Original_Stat" +
                "uss))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Lot_Assurance_Front", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Lot_Assurance_Front", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Order_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Order_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Order_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Order_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Spec_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Spec_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Spec_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Spec_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Size_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Size_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Size_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Size_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Die_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Die_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Die_Tread_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Die_Tread_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Machine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Machine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Machine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Machine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Preformer_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preformer_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Preformer_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preformer_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Preformer_No_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preformer_No_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Preformer_No_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preformer_No_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Insert_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insert_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Insert_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insert_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Insert_No_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insert_No_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Insert_No_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insert_No_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Compd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Compd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Compd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Compd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Compd_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Compd_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Compd_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Compd_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Stamp_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Stamp_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Stamp_Tread_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Stamp_Tread_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Cap", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Cap", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Cap_FM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap_FM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Cap_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap_FM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Cap_RT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap_RT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Cap_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap_RT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Base", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Base", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Base_FM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base_FM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Base_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base_FM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Base_RT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base_RT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Base_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base_RT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Wing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Wing", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Wing_FM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing_FM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Wing_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing_FM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Wing_RT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing_RT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Wing_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing_RT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Under_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Under_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Under_Tread_FM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread_FM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Under_Tread_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread_FM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Under_Tread_RT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread_RT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Under_Tread_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread_RT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Cap", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Cap", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Cap", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Cap", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Cap_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Cap_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Cap_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Cap_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Base", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Base", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Base", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Base", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Base_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Base_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Base_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Base_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Wing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Wing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Wing", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Wing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Wing_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Wing_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Wing_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Wing_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Undet_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Undet_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Undet_Tread", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Undet_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Undet_Tread_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Undet_Tread_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Undet_Tread_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Undet_Tread_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Line", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Line", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Line", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Line", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Line_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Line_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Line_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Line_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Width_Setting", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Setting", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Width_Setting", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Setting", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Width_Setting_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Setting_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Width_Setting_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Setting_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Running_Scalle_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Running_Scalle_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Running_Scalle_1_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_1_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Running_Scalle_1_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_1_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Statuss", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Statuss", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MASA_Lot_Assurance_Tread_Front] ([Kode_Lot_Assurance_Front], [" +
                "Kode_Order_Tread], [Kode_Spec_Tread], [Kode_Size_Tread], [Kode_Die_Tread], [Kode" +
                "_Die_Tread_Act], [Machine], [Preformer_No], [Preformer_No_Act], [Insert_No], [In" +
                "sert_No_Act], [Kode_Compd], [Kode_Compd_Act], [Kode_Stamp_Tread], [Kode_Stamp_Tr" +
                "ead_Act], [Compd_Cap], [Compd_Cap_FM], [Compd_Cap_RT], [Compd_Base], [Compd_Base" +
                "_FM], [Compd_Base_RT], [Compd_Wing], [Compd_Wing_FM], [Compd_Wing_RT], [Compd_Un" +
                "der_Tread], [Compd_Under_Tread_FM], [Compd_Under_Tread_RT], [Speed_Screw_Cap], [" +
                "Speed_Screw_Cap_Act], [Speed_Screw_Base], [Speed_Screw_Base_Act], [Speed_Screw_W" +
                "ing], [Speed_Screw_Wing_Act], [Speed_Screw_Undet_Tread], [Speed_Screw_Undet_Trea" +
                "d_Act], [Speed_Line], [Speed_Line_Act], [Total_Width], [Total_Width_Setting], [T" +
                "otal_Width_Setting_Act], [Running_Scalle_1], [Running_Scalle_1_Act], [UserID], [" +
                "Create_Date], [Statuss]) VALUES (@Kode_Lot_Assurance_Front, @Kode_Order_Tread, @" +
                "Kode_Spec_Tread, @Kode_Size_Tread, @Kode_Die_Tread, @Kode_Die_Tread_Act, @Machin" +
                "e, @Preformer_No, @Preformer_No_Act, @Insert_No, @Insert_No_Act, @Kode_Compd, @K" +
                "ode_Compd_Act, @Kode_Stamp_Tread, @Kode_Stamp_Tread_Act, @Compd_Cap, @Compd_Cap_" +
                "FM, @Compd_Cap_RT, @Compd_Base, @Compd_Base_FM, @Compd_Base_RT, @Compd_Wing, @Co" +
                "mpd_Wing_FM, @Compd_Wing_RT, @Compd_Under_Tread, @Compd_Under_Tread_FM, @Compd_U" +
                "nder_Tread_RT, @Speed_Screw_Cap, @Speed_Screw_Cap_Act, @Speed_Screw_Base, @Speed" +
                "_Screw_Base_Act, @Speed_Screw_Wing, @Speed_Screw_Wing_Act, @Speed_Screw_Undet_Tr" +
                "ead, @Speed_Screw_Undet_Tread_Act, @Speed_Line, @Speed_Line_Act, @Total_Width, @" +
                "Total_Width_Setting, @Total_Width_Setting_Act, @Running_Scalle_1, @Running_Scall" +
                "e_1_Act, @UserID, @Create_Date, @Statuss);\r\nSELECT Kode_Lot_Assurance_Front, Kod" +
                "e_Order_Tread, Kode_Spec_Tread, Kode_Size_Tread, Kode_Die_Tread, Kode_Die_Tread_" +
                "Act, Machine, Preformer_No, Preformer_No_Act, Insert_No, Insert_No_Act, Kode_Com" +
                "pd, Kode_Compd_Act, Kode_Stamp_Tread, Kode_Stamp_Tread_Act, Compd_Cap, Compd_Cap" +
                "_FM, Compd_Cap_RT, Compd_Base, Compd_Base_FM, Compd_Base_RT, Compd_Wing, Compd_W" +
                "ing_FM, Compd_Wing_RT, Compd_Under_Tread, Compd_Under_Tread_FM, Compd_Under_Trea" +
                "d_RT, Speed_Screw_Cap, Speed_Screw_Cap_Act, Speed_Screw_Base, Speed_Screw_Base_A" +
                "ct, Speed_Screw_Wing, Speed_Screw_Wing_Act, Speed_Screw_Undet_Tread, Speed_Screw" +
                "_Undet_Tread_Act, Speed_Line, Speed_Line_Act, Total_Width, Total_Width_Setting, " +
                "Total_Width_Setting_Act, Running_Scalle_1, Running_Scalle_1_Act, UserID, Create_" +
                "Date, Statuss FROM MASA_Lot_Assurance_Tread_Front WHERE (Kode_Lot_Assurance_Fron" +
                "t = @Kode_Lot_Assurance_Front)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Lot_Assurance_Front", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Lot_Assurance_Front", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Order_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Order_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Spec_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Spec_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Size_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Size_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Die_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Die_Tread_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Machine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Machine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Preformer_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preformer_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Preformer_No_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preformer_No_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insert_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insert_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insert_No_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insert_No_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Compd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Compd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Compd_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Compd_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Stamp_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Stamp_Tread_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Cap", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Cap_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap_FM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Cap_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap_RT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Base", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Base_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base_FM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Base_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base_RT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Wing", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Wing_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing_FM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Wing_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing_RT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Under_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Under_Tread_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread_FM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Under_Tread_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread_RT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Cap", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Cap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Cap_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Cap_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Base", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Base", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Base_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Base_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Wing", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Wing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Wing_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Wing_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Undet_Tread", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Undet_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Undet_Tread_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Undet_Tread_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Line", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Line", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Line_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Line_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Width_Setting", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Setting", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Width_Setting_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Setting_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Running_Scalle_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Running_Scalle_1_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_1_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Statuss", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Statuss", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[MASA_Lot_Assurance_Tread_Front] SET [Kode_Lot_Assurance_Front] = @K" +
                "ode_Lot_Assurance_Front, [Kode_Order_Tread] = @Kode_Order_Tread, [Kode_Spec_Trea" +
                "d] = @Kode_Spec_Tread, [Kode_Size_Tread] = @Kode_Size_Tread, [Kode_Die_Tread] = " +
                "@Kode_Die_Tread, [Kode_Die_Tread_Act] = @Kode_Die_Tread_Act, [Machine] = @Machin" +
                "e, [Preformer_No] = @Preformer_No, [Preformer_No_Act] = @Preformer_No_Act, [Inse" +
                "rt_No] = @Insert_No, [Insert_No_Act] = @Insert_No_Act, [Kode_Compd] = @Kode_Comp" +
                "d, [Kode_Compd_Act] = @Kode_Compd_Act, [Kode_Stamp_Tread] = @Kode_Stamp_Tread, [" +
                "Kode_Stamp_Tread_Act] = @Kode_Stamp_Tread_Act, [Compd_Cap] = @Compd_Cap, [Compd_" +
                "Cap_FM] = @Compd_Cap_FM, [Compd_Cap_RT] = @Compd_Cap_RT, [Compd_Base] = @Compd_B" +
                "ase, [Compd_Base_FM] = @Compd_Base_FM, [Compd_Base_RT] = @Compd_Base_RT, [Compd_" +
                "Wing] = @Compd_Wing, [Compd_Wing_FM] = @Compd_Wing_FM, [Compd_Wing_RT] = @Compd_" +
                "Wing_RT, [Compd_Under_Tread] = @Compd_Under_Tread, [Compd_Under_Tread_FM] = @Com" +
                "pd_Under_Tread_FM, [Compd_Under_Tread_RT] = @Compd_Under_Tread_RT, [Speed_Screw_" +
                "Cap] = @Speed_Screw_Cap, [Speed_Screw_Cap_Act] = @Speed_Screw_Cap_Act, [Speed_Sc" +
                "rew_Base] = @Speed_Screw_Base, [Speed_Screw_Base_Act] = @Speed_Screw_Base_Act, [" +
                "Speed_Screw_Wing] = @Speed_Screw_Wing, [Speed_Screw_Wing_Act] = @Speed_Screw_Win" +
                "g_Act, [Speed_Screw_Undet_Tread] = @Speed_Screw_Undet_Tread, [Speed_Screw_Undet_" +
                "Tread_Act] = @Speed_Screw_Undet_Tread_Act, [Speed_Line] = @Speed_Line, [Speed_Li" +
                "ne_Act] = @Speed_Line_Act, [Total_Width] = @Total_Width, [Total_Width_Setting] =" +
                " @Total_Width_Setting, [Total_Width_Setting_Act] = @Total_Width_Setting_Act, [Ru" +
                "nning_Scalle_1] = @Running_Scalle_1, [Running_Scalle_1_Act] = @Running_Scalle_1_" +
                "Act, [UserID] = @UserID, [Create_Date] = @Create_Date, [Statuss] = @Statuss WHER" +
                "E (([Kode_Lot_Assurance_Front] = @Original_Kode_Lot_Assurance_Front) AND ((@IsNu" +
                "ll_Kode_Order_Tread = 1 AND [Kode_Order_Tread] IS NULL) OR ([Kode_Order_Tread] =" +
                " @Original_Kode_Order_Tread)) AND ((@IsNull_Kode_Spec_Tread = 1 AND [Kode_Spec_T" +
                "read] IS NULL) OR ([Kode_Spec_Tread] = @Original_Kode_Spec_Tread)) AND ((@IsNull" +
                "_Kode_Size_Tread = 1 AND [Kode_Size_Tread] IS NULL) OR ([Kode_Size_Tread] = @Ori" +
                "ginal_Kode_Size_Tread)) AND ((@IsNull_Kode_Die_Tread = 1 AND [Kode_Die_Tread] IS" +
                " NULL) OR ([Kode_Die_Tread] = @Original_Kode_Die_Tread)) AND ((@IsNull_Kode_Die_" +
                "Tread_Act = 1 AND [Kode_Die_Tread_Act] IS NULL) OR ([Kode_Die_Tread_Act] = @Orig" +
                "inal_Kode_Die_Tread_Act)) AND ((@IsNull_Machine = 1 AND [Machine] IS NULL) OR ([" +
                "Machine] = @Original_Machine)) AND ((@IsNull_Preformer_No = 1 AND [Preformer_No]" +
                " IS NULL) OR ([Preformer_No] = @Original_Preformer_No)) AND ((@IsNull_Preformer_" +
                "No_Act = 1 AND [Preformer_No_Act] IS NULL) OR ([Preformer_No_Act] = @Original_Pr" +
                "eformer_No_Act)) AND ((@IsNull_Insert_No = 1 AND [Insert_No] IS NULL) OR ([Inser" +
                "t_No] = @Original_Insert_No)) AND ((@IsNull_Insert_No_Act = 1 AND [Insert_No_Act" +
                "] IS NULL) OR ([Insert_No_Act] = @Original_Insert_No_Act)) AND ((@IsNull_Kode_Co" +
                "mpd = 1 AND [Kode_Compd] IS NULL) OR ([Kode_Compd] = @Original_Kode_Compd)) AND " +
                "((@IsNull_Kode_Compd_Act = 1 AND [Kode_Compd_Act] IS NULL) OR ([Kode_Compd_Act] " +
                "= @Original_Kode_Compd_Act)) AND ((@IsNull_Kode_Stamp_Tread = 1 AND [Kode_Stamp_" +
                "Tread] IS NULL) OR ([Kode_Stamp_Tread] = @Original_Kode_Stamp_Tread)) AND ((@IsN" +
                "ull_Kode_Stamp_Tread_Act = 1 AND [Kode_Stamp_Tread_Act] IS NULL) OR ([Kode_Stamp" +
                "_Tread_Act] = @Original_Kode_Stamp_Tread_Act)) AND ((@IsNull_Compd_Cap = 1 AND [" +
                "Compd_Cap] IS NULL) OR ([Compd_Cap] = @Original_Compd_Cap)) AND ((@IsNull_Compd_" +
                "Cap_FM = 1 AND [Compd_Cap_FM] IS NULL) OR ([Compd_Cap_FM] = @Original_Compd_Cap_" +
                "FM)) AND ((@IsNull_Compd_Cap_RT = 1 AND [Compd_Cap_RT] IS NULL) OR ([Compd_Cap_R" +
                "T] = @Original_Compd_Cap_RT)) AND ((@IsNull_Compd_Base = 1 AND [Compd_Base] IS N" +
                "ULL) OR ([Compd_Base] = @Original_Compd_Base)) AND ((@IsNull_Compd_Base_FM = 1 A" +
                "ND [Compd_Base_FM] IS NULL) OR ([Compd_Base_FM] = @Original_Compd_Base_FM)) AND " +
                "((@IsNull_Compd_Base_RT = 1 AND [Compd_Base_RT] IS NULL) OR ([Compd_Base_RT] = @" +
                "Original_Compd_Base_RT)) AND ((@IsNull_Compd_Wing = 1 AND [Compd_Wing] IS NULL) " +
                "OR ([Compd_Wing] = @Original_Compd_Wing)) AND ((@IsNull_Compd_Wing_FM = 1 AND [C" +
                "ompd_Wing_FM] IS NULL) OR ([Compd_Wing_FM] = @Original_Compd_Wing_FM)) AND ((@Is" +
                "Null_Compd_Wing_RT = 1 AND [Compd_Wing_RT] IS NULL) OR ([Compd_Wing_RT] = @Origi" +
                "nal_Compd_Wing_RT)) AND ((@IsNull_Compd_Under_Tread = 1 AND [Compd_Under_Tread] " +
                "IS NULL) OR ([Compd_Under_Tread] = @Original_Compd_Under_Tread)) AND ((@IsNull_C" +
                "ompd_Under_Tread_FM = 1 AND [Compd_Under_Tread_FM] IS NULL) OR ([Compd_Under_Tre" +
                "ad_FM] = @Original_Compd_Under_Tread_FM)) AND ((@IsNull_Compd_Under_Tread_RT = 1" +
                " AND [Compd_Under_Tread_RT] IS NULL) OR ([Compd_Under_Tread_RT] = @Original_Comp" +
                "d_Under_Tread_RT)) AND ((@IsNull_Speed_Screw_Cap = 1 AND [Speed_Screw_Cap] IS NU" +
                "LL) OR ([Speed_Screw_Cap] = @Original_Speed_Screw_Cap)) AND ((@IsNull_Speed_Scre" +
                "w_Cap_Act = 1 AND [Speed_Screw_Cap_Act] IS NULL) OR ([Speed_Screw_Cap_Act] = @Or" +
                "iginal_Speed_Screw_Cap_Act)) AND ((@IsNull_Speed_Screw_Base = 1 AND [Speed_Screw" +
                "_Base] IS NULL) OR ([Speed_Screw_Base] = @Original_Speed_Screw_Base)) AND ((@IsN" +
                "ull_Speed_Screw_Base_Act = 1 AND [Speed_Screw_Base_Act] IS NULL) OR ([Speed_Scre" +
                "w_Base_Act] = @Original_Speed_Screw_Base_Act)) AND ((@IsNull_Speed_Screw_Wing = " +
                "1 AND [Speed_Screw_Wing] IS NULL) OR ([Speed_Screw_Wing] = @Original_Speed_Screw" +
                "_Wing)) AND ((@IsNull_Speed_Screw_Wing_Act = 1 AND [Speed_Screw_Wing_Act] IS NUL" +
                "L) OR ([Speed_Screw_Wing_Act] = @Original_Speed_Screw_Wing_Act)) AND ((@IsNull_S" +
                "peed_Screw_Undet_Tread = 1 AND [Speed_Screw_Undet_Tread] IS NULL) OR ([Speed_Scr" +
                "ew_Undet_Tread] = @Original_Speed_Screw_Undet_Tread)) AND ((@IsNull_Speed_Screw_" +
                "Undet_Tread_Act = 1 AND [Speed_Screw_Undet_Tread_Act] IS NULL) OR ([Speed_Screw_" +
                "Undet_Tread_Act] = @Original_Speed_Screw_Undet_Tread_Act)) AND ((@IsNull_Speed_L" +
                "ine = 1 AND [Speed_Line] IS NULL) OR ([Speed_Line] = @Original_Speed_Line)) AND " +
                "((@IsNull_Speed_Line_Act = 1 AND [Speed_Line_Act] IS NULL) OR ([Speed_Line_Act] " +
                "= @Original_Speed_Line_Act)) AND ((@IsNull_Total_Width = 1 AND [Total_Width] IS " +
                "NULL) OR ([Total_Width] = @Original_Total_Width)) AND ((@IsNull_Total_Width_Sett" +
                "ing = 1 AND [Total_Width_Setting] IS NULL) OR ([Total_Width_Setting] = @Original" +
                "_Total_Width_Setting)) AND ((@IsNull_Total_Width_Setting_Act = 1 AND [Total_Widt" +
                "h_Setting_Act] IS NULL) OR ([Total_Width_Setting_Act] = @Original_Total_Width_Se" +
                "tting_Act)) AND ((@IsNull_Running_Scalle_1 = 1 AND [Running_Scalle_1] IS NULL) O" +
                "R ([Running_Scalle_1] = @Original_Running_Scalle_1)) AND ((@IsNull_Running_Scall" +
                "e_1_Act = 1 AND [Running_Scalle_1_Act] IS NULL) OR ([Running_Scalle_1_Act] = @Or" +
                "iginal_Running_Scalle_1_Act)) AND ((@IsNull_UserID = 1 AND [UserID] IS NULL) OR " +
                "([UserID] = @Original_UserID)) AND ([Create_Date] = @Original_Create_Date) AND (" +
                "[Statuss] = @Original_Statuss));\r\nSELECT Kode_Lot_Assurance_Front, Kode_Order_Tr" +
                "ead, Kode_Spec_Tread, Kode_Size_Tread, Kode_Die_Tread, Kode_Die_Tread_Act, Machi" +
                "ne, Preformer_No, Preformer_No_Act, Insert_No, Insert_No_Act, Kode_Compd, Kode_C" +
                "ompd_Act, Kode_Stamp_Tread, Kode_Stamp_Tread_Act, Compd_Cap, Compd_Cap_FM, Compd" +
                "_Cap_RT, Compd_Base, Compd_Base_FM, Compd_Base_RT, Compd_Wing, Compd_Wing_FM, Co" +
                "mpd_Wing_RT, Compd_Under_Tread, Compd_Under_Tread_FM, Compd_Under_Tread_RT, Spee" +
                "d_Screw_Cap, Speed_Screw_Cap_Act, Speed_Screw_Base, Speed_Screw_Base_Act, Speed_" +
                "Screw_Wing, Speed_Screw_Wing_Act, Speed_Screw_Undet_Tread, Speed_Screw_Undet_Tre" +
                "ad_Act, Speed_Line, Speed_Line_Act, Total_Width, Total_Width_Setting, Total_Widt" +
                "h_Setting_Act, Running_Scalle_1, Running_Scalle_1_Act, UserID, Create_Date, Stat" +
                "uss FROM MASA_Lot_Assurance_Tread_Front WHERE (Kode_Lot_Assurance_Front = @Kode_" +
                "Lot_Assurance_Front)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Lot_Assurance_Front", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Lot_Assurance_Front", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Order_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Order_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Spec_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Spec_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Size_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Size_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Die_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Die_Tread_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Machine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Machine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Preformer_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preformer_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Preformer_No_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preformer_No_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insert_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insert_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insert_No_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insert_No_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Compd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Compd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Compd_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Compd_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Stamp_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kode_Stamp_Tread_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Cap", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Cap_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap_FM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Cap_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap_RT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Base", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Base_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base_FM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Base_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base_RT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Wing", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Wing_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing_FM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Wing_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing_RT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Under_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Under_Tread_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread_FM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compd_Under_Tread_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread_RT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Cap", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Cap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Cap_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Cap_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Base", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Base", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Base_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Base_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Wing", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Wing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Wing_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Wing_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Undet_Tread", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Undet_Tread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Screw_Undet_Tread_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Undet_Tread_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Line", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Line", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speed_Line_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Line_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Width_Setting", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Setting", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Width_Setting_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Setting_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Running_Scalle_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Running_Scalle_1_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_1_Act", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Statuss", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Statuss", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Lot_Assurance_Front", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Lot_Assurance_Front", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Order_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Order_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Order_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Order_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Spec_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Spec_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Spec_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Spec_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Size_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Size_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Size_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Size_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Die_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Die_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Die_Tread_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Die_Tread_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Die_Tread_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Machine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Machine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Machine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Machine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Preformer_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preformer_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Preformer_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preformer_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Preformer_No_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preformer_No_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Preformer_No_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preformer_No_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Insert_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insert_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Insert_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insert_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Insert_No_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insert_No_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Insert_No_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insert_No_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Compd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Compd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Compd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Compd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Compd_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Compd_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Compd_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Compd_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Stamp_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Stamp_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Kode_Stamp_Tread_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kode_Stamp_Tread_Act", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kode_Stamp_Tread_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Cap", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Cap", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Cap_FM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap_FM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Cap_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap_FM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Cap_RT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap_RT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Cap_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Cap_RT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Base", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Base", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Base_FM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base_FM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Base_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base_FM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Base_RT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base_RT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Base_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Base_RT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Wing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Wing", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Wing_FM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing_FM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Wing_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing_FM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Wing_RT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing_RT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Wing_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Wing_RT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Under_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Under_Tread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Under_Tread_FM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread_FM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Under_Tread_FM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread_FM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compd_Under_Tread_RT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread_RT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compd_Under_Tread_RT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compd_Under_Tread_RT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Cap", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Cap", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Cap", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Cap", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Cap_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Cap_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Cap_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Cap_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Base", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Base", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Base", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Base", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Base_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Base_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Base_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Base_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Wing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Wing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Wing", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Wing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Wing_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Wing_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Wing_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Wing_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Undet_Tread", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Undet_Tread", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Undet_Tread", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Undet_Tread", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Screw_Undet_Tread_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Screw_Undet_Tread_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Screw_Undet_Tread_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Screw_Undet_Tread_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Line", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Line", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Line", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Line", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Speed_Line_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speed_Line_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Speed_Line_Act", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 1, "Speed_Line_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Width_Setting", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Setting", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Width_Setting", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Setting", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Width_Setting_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Setting_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Width_Setting_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Width_Setting_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Running_Scalle_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Running_Scalle_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Running_Scalle_1_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_1_Act", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Running_Scalle_1_Act", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Running_Scalle_1_Act", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Statuss", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Statuss", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExtruderManagementSystem_UI.Properties.Settings.Default.MASA2_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Kode_Lot_Assurance_Front, Kode_Order_Tread, Kode_Spec_Tread, Kode_Size_Tread, Kode_Die_Tread, Kode_Die_Tread_Act, Machine, Preformer_No, Preformer_No_Act, Insert_No, Insert_No_Act, Kode_Compd, Kode_Compd_Act, Kode_Stamp_Tread, Kode_Stamp_Tread_Act, Compd_Cap, Compd_Cap_FM, Compd_Cap_RT, Compd_Base, Compd_Base_FM, Compd_Base_RT, Compd_Wing, Compd_Wing_FM, Compd_Wing_RT, Compd_Under_Tread, Compd_Under_Tread_FM, Compd_Under_Tread_RT, Speed_Screw_Cap, Speed_Screw_Cap_Act, Speed_Screw_Base, Speed_Screw_Base_Act, Speed_Screw_Wing, Speed_Screw_Wing_Act, Speed_Screw_Undet_Tread, Speed_Screw_Undet_Tread_Act, Speed_Line, Speed_Line_Act, Total_Width, Total_Width_Setting, Total_Width_Setting_Act, Running_Scalle_1, Running_Scalle_1_Act, UserID, Create_Date, Statuss FROM dbo.MASA_Lot_Assurance_Tread_Front";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_LotAssuranceTreadFront.MASA_Lot_Assurance_Tread_FrontDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_LotAssuranceTreadFront.MASA_Lot_Assurance_Tread_FrontDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_LotAssuranceTreadFront.MASA_Lot_Assurance_Tread_FrontDataTable dataTable = new DataSet_LotAssuranceTreadFront.MASA_Lot_Assurance_Tread_FrontDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_LotAssuranceTreadFront.MASA_Lot_Assurance_Tread_FrontDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_LotAssuranceTreadFront dataSet) {
            return this.Adapter.Update(dataSet, "MASA_Lot_Assurance_Tread_Front");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_Kode_Lot_Assurance_Front, 
                    string Original_Kode_Order_Tread, 
                    string Original_Kode_Spec_Tread, 
                    string Original_Kode_Size_Tread, 
                    string Original_Kode_Die_Tread, 
                    string Original_Kode_Die_Tread_Act, 
                    string Original_Machine, 
                    string Original_Preformer_No, 
                    string Original_Preformer_No_Act, 
                    string Original_Insert_No, 
                    string Original_Insert_No_Act, 
                    string Original_Kode_Compd, 
                    string Original_Kode_Compd_Act, 
                    string Original_Kode_Stamp_Tread, 
                    string Original_Kode_Stamp_Tread_Act, 
                    string Original_Compd_Cap, 
                    string Original_Compd_Cap_FM, 
                    string Original_Compd_Cap_RT, 
                    string Original_Compd_Base, 
                    string Original_Compd_Base_FM, 
                    string Original_Compd_Base_RT, 
                    string Original_Compd_Wing, 
                    string Original_Compd_Wing_FM, 
                    string Original_Compd_Wing_RT, 
                    string Original_Compd_Under_Tread, 
                    string Original_Compd_Under_Tread_FM, 
                    string Original_Compd_Under_Tread_RT, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Cap, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Cap_Act, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Base, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Base_Act, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Wing, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Wing_Act, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Undet_Tread, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Undet_Tread_Act, 
                    global::System.Nullable<decimal> Original_Speed_Line, 
                    global::System.Nullable<decimal> Original_Speed_Line_Act, 
                    global::System.Nullable<int> Original_Total_Width, 
                    global::System.Nullable<int> Original_Total_Width_Setting, 
                    global::System.Nullable<int> Original_Total_Width_Setting_Act, 
                    global::System.Nullable<int> Original_Running_Scalle_1, 
                    global::System.Nullable<int> Original_Running_Scalle_1_Act, 
                    string Original_UserID, 
                    System.DateTime Original_Create_Date, 
                    bool Original_Statuss) {
            if ((Original_Kode_Lot_Assurance_Front == null)) {
                throw new global::System.ArgumentNullException("Original_Kode_Lot_Assurance_Front");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Kode_Lot_Assurance_Front));
            }
            if ((Original_Kode_Order_Tread == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Kode_Order_Tread));
            }
            if ((Original_Kode_Spec_Tread == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Kode_Spec_Tread));
            }
            if ((Original_Kode_Size_Tread == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Kode_Size_Tread));
            }
            if ((Original_Kode_Die_Tread == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Kode_Die_Tread));
            }
            if ((Original_Kode_Die_Tread_Act == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Kode_Die_Tread_Act));
            }
            if ((Original_Machine == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Machine));
            }
            if ((Original_Preformer_No == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Preformer_No));
            }
            if ((Original_Preformer_No_Act == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Preformer_No_Act));
            }
            if ((Original_Insert_No == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Insert_No));
            }
            if ((Original_Insert_No_Act == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Insert_No_Act));
            }
            if ((Original_Kode_Compd == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Kode_Compd));
            }
            if ((Original_Kode_Compd_Act == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Kode_Compd_Act));
            }
            if ((Original_Kode_Stamp_Tread == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Kode_Stamp_Tread));
            }
            if ((Original_Kode_Stamp_Tread_Act == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Kode_Stamp_Tread_Act));
            }
            if ((Original_Compd_Cap == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_Compd_Cap));
            }
            if ((Original_Compd_Cap_FM == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_Compd_Cap_FM));
            }
            if ((Original_Compd_Cap_RT == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_Compd_Cap_RT));
            }
            if ((Original_Compd_Base == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_Compd_Base));
            }
            if ((Original_Compd_Base_FM == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_Compd_Base_FM));
            }
            if ((Original_Compd_Base_RT == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_Compd_Base_RT));
            }
            if ((Original_Compd_Wing == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_Compd_Wing));
            }
            if ((Original_Compd_Wing_FM == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_Compd_Wing_FM));
            }
            if ((Original_Compd_Wing_RT == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_Compd_Wing_RT));
            }
            if ((Original_Compd_Under_Tread == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_Compd_Under_Tread));
            }
            if ((Original_Compd_Under_Tread_FM == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_Compd_Under_Tread_FM));
            }
            if ((Original_Compd_Under_Tread_RT == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_Compd_Under_Tread_RT));
            }
            if ((Original_Speed_Screw_Cap.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((decimal)(Original_Speed_Screw_Cap.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Cap_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((decimal)(Original_Speed_Screw_Cap_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Base.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((decimal)(Original_Speed_Screw_Base.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Base_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((decimal)(Original_Speed_Screw_Base_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Wing.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((decimal)(Original_Speed_Screw_Wing.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Wing_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((decimal)(Original_Speed_Screw_Wing_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Undet_Tread.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((decimal)(Original_Speed_Screw_Undet_Tread.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Undet_Tread_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((decimal)(Original_Speed_Screw_Undet_Tread_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Line.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((decimal)(Original_Speed_Line.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Line_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((decimal)(Original_Speed_Line_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_Width.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((int)(Original_Total_Width.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_Width_Setting.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((int)(Original_Total_Width_Setting.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_Width_Setting_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((int)(Original_Total_Width_Setting_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_Running_Scalle_1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((int)(Original_Running_Scalle_1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_Running_Scalle_1_Act.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((int)(Original_Running_Scalle_1_Act.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_UserID == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_UserID));
            }
            this.Adapter.DeleteCommand.Parameters[85].Value = ((System.DateTime)(Original_Create_Date));
            this.Adapter.DeleteCommand.Parameters[86].Value = ((bool)(Original_Statuss));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Kode_Lot_Assurance_Front, 
                    string Kode_Order_Tread, 
                    string Kode_Spec_Tread, 
                    string Kode_Size_Tread, 
                    string Kode_Die_Tread, 
                    string Kode_Die_Tread_Act, 
                    string Machine, 
                    string Preformer_No, 
                    string Preformer_No_Act, 
                    string Insert_No, 
                    string Insert_No_Act, 
                    string Kode_Compd, 
                    string Kode_Compd_Act, 
                    string Kode_Stamp_Tread, 
                    string Kode_Stamp_Tread_Act, 
                    string Compd_Cap, 
                    string Compd_Cap_FM, 
                    string Compd_Cap_RT, 
                    string Compd_Base, 
                    string Compd_Base_FM, 
                    string Compd_Base_RT, 
                    string Compd_Wing, 
                    string Compd_Wing_FM, 
                    string Compd_Wing_RT, 
                    string Compd_Under_Tread, 
                    string Compd_Under_Tread_FM, 
                    string Compd_Under_Tread_RT, 
                    global::System.Nullable<decimal> Speed_Screw_Cap, 
                    global::System.Nullable<decimal> Speed_Screw_Cap_Act, 
                    global::System.Nullable<decimal> Speed_Screw_Base, 
                    global::System.Nullable<decimal> Speed_Screw_Base_Act, 
                    global::System.Nullable<decimal> Speed_Screw_Wing, 
                    global::System.Nullable<decimal> Speed_Screw_Wing_Act, 
                    global::System.Nullable<decimal> Speed_Screw_Undet_Tread, 
                    global::System.Nullable<decimal> Speed_Screw_Undet_Tread_Act, 
                    global::System.Nullable<decimal> Speed_Line, 
                    global::System.Nullable<decimal> Speed_Line_Act, 
                    global::System.Nullable<int> Total_Width, 
                    global::System.Nullable<int> Total_Width_Setting, 
                    global::System.Nullable<int> Total_Width_Setting_Act, 
                    global::System.Nullable<int> Running_Scalle_1, 
                    global::System.Nullable<int> Running_Scalle_1_Act, 
                    string UserID, 
                    System.DateTime Create_Date, 
                    bool Statuss) {
            if ((Kode_Lot_Assurance_Front == null)) {
                throw new global::System.ArgumentNullException("Kode_Lot_Assurance_Front");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Kode_Lot_Assurance_Front));
            }
            if ((Kode_Order_Tread == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Kode_Order_Tread));
            }
            if ((Kode_Spec_Tread == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Kode_Spec_Tread));
            }
            if ((Kode_Size_Tread == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Kode_Size_Tread));
            }
            if ((Kode_Die_Tread == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Kode_Die_Tread));
            }
            if ((Kode_Die_Tread_Act == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Kode_Die_Tread_Act));
            }
            if ((Machine == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Machine));
            }
            if ((Preformer_No == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Preformer_No));
            }
            if ((Preformer_No_Act == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Preformer_No_Act));
            }
            if ((Insert_No == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Insert_No));
            }
            if ((Insert_No_Act == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Insert_No_Act));
            }
            if ((Kode_Compd == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Kode_Compd));
            }
            if ((Kode_Compd_Act == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Kode_Compd_Act));
            }
            if ((Kode_Stamp_Tread == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Kode_Stamp_Tread));
            }
            if ((Kode_Stamp_Tread_Act == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Kode_Stamp_Tread_Act));
            }
            if ((Compd_Cap == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Compd_Cap));
            }
            if ((Compd_Cap_FM == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Compd_Cap_FM));
            }
            if ((Compd_Cap_RT == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Compd_Cap_RT));
            }
            if ((Compd_Base == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Compd_Base));
            }
            if ((Compd_Base_FM == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Compd_Base_FM));
            }
            if ((Compd_Base_RT == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Compd_Base_RT));
            }
            if ((Compd_Wing == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Compd_Wing));
            }
            if ((Compd_Wing_FM == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Compd_Wing_FM));
            }
            if ((Compd_Wing_RT == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Compd_Wing_RT));
            }
            if ((Compd_Under_Tread == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Compd_Under_Tread));
            }
            if ((Compd_Under_Tread_FM == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Compd_Under_Tread_FM));
            }
            if ((Compd_Under_Tread_RT == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Compd_Under_Tread_RT));
            }
            if ((Speed_Screw_Cap.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(Speed_Screw_Cap.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Cap_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(Speed_Screw_Cap_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Base.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(Speed_Screw_Base.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Base_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(Speed_Screw_Base_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Wing.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(Speed_Screw_Wing.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Wing_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(Speed_Screw_Wing_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Undet_Tread.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(Speed_Screw_Undet_Tread.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Undet_Tread_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(Speed_Screw_Undet_Tread_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Speed_Line.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(Speed_Line.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Speed_Line_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(Speed_Line_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Total_Width.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(Total_Width.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Total_Width_Setting.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((int)(Total_Width_Setting.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Total_Width_Setting_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((int)(Total_Width_Setting_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Running_Scalle_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((int)(Running_Scalle_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Running_Scalle_1_Act.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((int)(Running_Scalle_1_Act.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((UserID == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(UserID));
            }
            this.Adapter.InsertCommand.Parameters[43].Value = ((System.DateTime)(Create_Date));
            this.Adapter.InsertCommand.Parameters[44].Value = ((bool)(Statuss));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Kode_Lot_Assurance_Front, 
                    string Kode_Order_Tread, 
                    string Kode_Spec_Tread, 
                    string Kode_Size_Tread, 
                    string Kode_Die_Tread, 
                    string Kode_Die_Tread_Act, 
                    string Machine, 
                    string Preformer_No, 
                    string Preformer_No_Act, 
                    string Insert_No, 
                    string Insert_No_Act, 
                    string Kode_Compd, 
                    string Kode_Compd_Act, 
                    string Kode_Stamp_Tread, 
                    string Kode_Stamp_Tread_Act, 
                    string Compd_Cap, 
                    string Compd_Cap_FM, 
                    string Compd_Cap_RT, 
                    string Compd_Base, 
                    string Compd_Base_FM, 
                    string Compd_Base_RT, 
                    string Compd_Wing, 
                    string Compd_Wing_FM, 
                    string Compd_Wing_RT, 
                    string Compd_Under_Tread, 
                    string Compd_Under_Tread_FM, 
                    string Compd_Under_Tread_RT, 
                    global::System.Nullable<decimal> Speed_Screw_Cap, 
                    global::System.Nullable<decimal> Speed_Screw_Cap_Act, 
                    global::System.Nullable<decimal> Speed_Screw_Base, 
                    global::System.Nullable<decimal> Speed_Screw_Base_Act, 
                    global::System.Nullable<decimal> Speed_Screw_Wing, 
                    global::System.Nullable<decimal> Speed_Screw_Wing_Act, 
                    global::System.Nullable<decimal> Speed_Screw_Undet_Tread, 
                    global::System.Nullable<decimal> Speed_Screw_Undet_Tread_Act, 
                    global::System.Nullable<decimal> Speed_Line, 
                    global::System.Nullable<decimal> Speed_Line_Act, 
                    global::System.Nullable<int> Total_Width, 
                    global::System.Nullable<int> Total_Width_Setting, 
                    global::System.Nullable<int> Total_Width_Setting_Act, 
                    global::System.Nullable<int> Running_Scalle_1, 
                    global::System.Nullable<int> Running_Scalle_1_Act, 
                    string UserID, 
                    System.DateTime Create_Date, 
                    bool Statuss, 
                    string Original_Kode_Lot_Assurance_Front, 
                    string Original_Kode_Order_Tread, 
                    string Original_Kode_Spec_Tread, 
                    string Original_Kode_Size_Tread, 
                    string Original_Kode_Die_Tread, 
                    string Original_Kode_Die_Tread_Act, 
                    string Original_Machine, 
                    string Original_Preformer_No, 
                    string Original_Preformer_No_Act, 
                    string Original_Insert_No, 
                    string Original_Insert_No_Act, 
                    string Original_Kode_Compd, 
                    string Original_Kode_Compd_Act, 
                    string Original_Kode_Stamp_Tread, 
                    string Original_Kode_Stamp_Tread_Act, 
                    string Original_Compd_Cap, 
                    string Original_Compd_Cap_FM, 
                    string Original_Compd_Cap_RT, 
                    string Original_Compd_Base, 
                    string Original_Compd_Base_FM, 
                    string Original_Compd_Base_RT, 
                    string Original_Compd_Wing, 
                    string Original_Compd_Wing_FM, 
                    string Original_Compd_Wing_RT, 
                    string Original_Compd_Under_Tread, 
                    string Original_Compd_Under_Tread_FM, 
                    string Original_Compd_Under_Tread_RT, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Cap, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Cap_Act, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Base, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Base_Act, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Wing, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Wing_Act, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Undet_Tread, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Undet_Tread_Act, 
                    global::System.Nullable<decimal> Original_Speed_Line, 
                    global::System.Nullable<decimal> Original_Speed_Line_Act, 
                    global::System.Nullable<int> Original_Total_Width, 
                    global::System.Nullable<int> Original_Total_Width_Setting, 
                    global::System.Nullable<int> Original_Total_Width_Setting_Act, 
                    global::System.Nullable<int> Original_Running_Scalle_1, 
                    global::System.Nullable<int> Original_Running_Scalle_1_Act, 
                    string Original_UserID, 
                    System.DateTime Original_Create_Date, 
                    bool Original_Statuss) {
            if ((Kode_Lot_Assurance_Front == null)) {
                throw new global::System.ArgumentNullException("Kode_Lot_Assurance_Front");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Kode_Lot_Assurance_Front));
            }
            if ((Kode_Order_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Kode_Order_Tread));
            }
            if ((Kode_Spec_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Kode_Spec_Tread));
            }
            if ((Kode_Size_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Kode_Size_Tread));
            }
            if ((Kode_Die_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Kode_Die_Tread));
            }
            if ((Kode_Die_Tread_Act == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Kode_Die_Tread_Act));
            }
            if ((Machine == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Machine));
            }
            if ((Preformer_No == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Preformer_No));
            }
            if ((Preformer_No_Act == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Preformer_No_Act));
            }
            if ((Insert_No == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Insert_No));
            }
            if ((Insert_No_Act == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Insert_No_Act));
            }
            if ((Kode_Compd == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Kode_Compd));
            }
            if ((Kode_Compd_Act == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Kode_Compd_Act));
            }
            if ((Kode_Stamp_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Kode_Stamp_Tread));
            }
            if ((Kode_Stamp_Tread_Act == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Kode_Stamp_Tread_Act));
            }
            if ((Compd_Cap == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Compd_Cap));
            }
            if ((Compd_Cap_FM == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Compd_Cap_FM));
            }
            if ((Compd_Cap_RT == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Compd_Cap_RT));
            }
            if ((Compd_Base == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Compd_Base));
            }
            if ((Compd_Base_FM == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Compd_Base_FM));
            }
            if ((Compd_Base_RT == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Compd_Base_RT));
            }
            if ((Compd_Wing == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Compd_Wing));
            }
            if ((Compd_Wing_FM == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Compd_Wing_FM));
            }
            if ((Compd_Wing_RT == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Compd_Wing_RT));
            }
            if ((Compd_Under_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Compd_Under_Tread));
            }
            if ((Compd_Under_Tread_FM == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Compd_Under_Tread_FM));
            }
            if ((Compd_Under_Tread_RT == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Compd_Under_Tread_RT));
            }
            if ((Speed_Screw_Cap.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Speed_Screw_Cap.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Cap_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Speed_Screw_Cap_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Base.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Speed_Screw_Base.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Base_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Speed_Screw_Base_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Wing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Speed_Screw_Wing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Wing_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Speed_Screw_Wing_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Undet_Tread.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Speed_Screw_Undet_Tread.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Speed_Screw_Undet_Tread_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Speed_Screw_Undet_Tread_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Speed_Line.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Speed_Line.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Speed_Line_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(Speed_Line_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Total_Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Total_Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Total_Width_Setting.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Total_Width_Setting.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Total_Width_Setting_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Total_Width_Setting_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Running_Scalle_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Running_Scalle_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Running_Scalle_1_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Running_Scalle_1_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((UserID == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(UserID));
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(Create_Date));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(Statuss));
            if ((Original_Kode_Lot_Assurance_Front == null)) {
                throw new global::System.ArgumentNullException("Original_Kode_Lot_Assurance_Front");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_Kode_Lot_Assurance_Front));
            }
            if ((Original_Kode_Order_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_Kode_Order_Tread));
            }
            if ((Original_Kode_Spec_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_Kode_Spec_Tread));
            }
            if ((Original_Kode_Size_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_Kode_Size_Tread));
            }
            if ((Original_Kode_Die_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_Kode_Die_Tread));
            }
            if ((Original_Kode_Die_Tread_Act == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_Kode_Die_Tread_Act));
            }
            if ((Original_Machine == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_Machine));
            }
            if ((Original_Preformer_No == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_Preformer_No));
            }
            if ((Original_Preformer_No_Act == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_Preformer_No_Act));
            }
            if ((Original_Insert_No == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_Insert_No));
            }
            if ((Original_Insert_No_Act == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_Insert_No_Act));
            }
            if ((Original_Kode_Compd == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_Kode_Compd));
            }
            if ((Original_Kode_Compd_Act == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_Kode_Compd_Act));
            }
            if ((Original_Kode_Stamp_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_Kode_Stamp_Tread));
            }
            if ((Original_Kode_Stamp_Tread_Act == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_Kode_Stamp_Tread_Act));
            }
            if ((Original_Compd_Cap == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_Compd_Cap));
            }
            if ((Original_Compd_Cap_FM == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_Compd_Cap_FM));
            }
            if ((Original_Compd_Cap_RT == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_Compd_Cap_RT));
            }
            if ((Original_Compd_Base == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_Compd_Base));
            }
            if ((Original_Compd_Base_FM == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_Compd_Base_FM));
            }
            if ((Original_Compd_Base_RT == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_Compd_Base_RT));
            }
            if ((Original_Compd_Wing == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_Compd_Wing));
            }
            if ((Original_Compd_Wing_FM == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_Compd_Wing_FM));
            }
            if ((Original_Compd_Wing_RT == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_Compd_Wing_RT));
            }
            if ((Original_Compd_Under_Tread == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_Compd_Under_Tread));
            }
            if ((Original_Compd_Under_Tread_FM == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_Compd_Under_Tread_FM));
            }
            if ((Original_Compd_Under_Tread_RT == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_Compd_Under_Tread_RT));
            }
            if ((Original_Speed_Screw_Cap.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((decimal)(Original_Speed_Screw_Cap.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Cap_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((decimal)(Original_Speed_Screw_Cap_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Base.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((decimal)(Original_Speed_Screw_Base.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Base_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((decimal)(Original_Speed_Screw_Base_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Wing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((decimal)(Original_Speed_Screw_Wing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Wing_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((decimal)(Original_Speed_Screw_Wing_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Undet_Tread.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((decimal)(Original_Speed_Screw_Undet_Tread.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Screw_Undet_Tread_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((decimal)(Original_Speed_Screw_Undet_Tread_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Line.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((decimal)(Original_Speed_Line.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_Speed_Line_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((decimal)(Original_Speed_Line_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((int)(Original_Total_Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_Width_Setting.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((int)(Original_Total_Width_Setting.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_Width_Setting_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((int)(Original_Total_Width_Setting_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_Running_Scalle_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((int)(Original_Running_Scalle_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((Original_Running_Scalle_1_Act.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((int)(Original_Running_Scalle_1_Act.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Original_UserID == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(Original_UserID));
            }
            this.Adapter.UpdateCommand.Parameters[130].Value = ((System.DateTime)(Original_Create_Date));
            this.Adapter.UpdateCommand.Parameters[131].Value = ((bool)(Original_Statuss));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Kode_Order_Tread, 
                    string Kode_Spec_Tread, 
                    string Kode_Size_Tread, 
                    string Kode_Die_Tread, 
                    string Kode_Die_Tread_Act, 
                    string Machine, 
                    string Preformer_No, 
                    string Preformer_No_Act, 
                    string Insert_No, 
                    string Insert_No_Act, 
                    string Kode_Compd, 
                    string Kode_Compd_Act, 
                    string Kode_Stamp_Tread, 
                    string Kode_Stamp_Tread_Act, 
                    string Compd_Cap, 
                    string Compd_Cap_FM, 
                    string Compd_Cap_RT, 
                    string Compd_Base, 
                    string Compd_Base_FM, 
                    string Compd_Base_RT, 
                    string Compd_Wing, 
                    string Compd_Wing_FM, 
                    string Compd_Wing_RT, 
                    string Compd_Under_Tread, 
                    string Compd_Under_Tread_FM, 
                    string Compd_Under_Tread_RT, 
                    global::System.Nullable<decimal> Speed_Screw_Cap, 
                    global::System.Nullable<decimal> Speed_Screw_Cap_Act, 
                    global::System.Nullable<decimal> Speed_Screw_Base, 
                    global::System.Nullable<decimal> Speed_Screw_Base_Act, 
                    global::System.Nullable<decimal> Speed_Screw_Wing, 
                    global::System.Nullable<decimal> Speed_Screw_Wing_Act, 
                    global::System.Nullable<decimal> Speed_Screw_Undet_Tread, 
                    global::System.Nullable<decimal> Speed_Screw_Undet_Tread_Act, 
                    global::System.Nullable<decimal> Speed_Line, 
                    global::System.Nullable<decimal> Speed_Line_Act, 
                    global::System.Nullable<int> Total_Width, 
                    global::System.Nullable<int> Total_Width_Setting, 
                    global::System.Nullable<int> Total_Width_Setting_Act, 
                    global::System.Nullable<int> Running_Scalle_1, 
                    global::System.Nullable<int> Running_Scalle_1_Act, 
                    string UserID, 
                    System.DateTime Create_Date, 
                    bool Statuss, 
                    string Original_Kode_Lot_Assurance_Front, 
                    string Original_Kode_Order_Tread, 
                    string Original_Kode_Spec_Tread, 
                    string Original_Kode_Size_Tread, 
                    string Original_Kode_Die_Tread, 
                    string Original_Kode_Die_Tread_Act, 
                    string Original_Machine, 
                    string Original_Preformer_No, 
                    string Original_Preformer_No_Act, 
                    string Original_Insert_No, 
                    string Original_Insert_No_Act, 
                    string Original_Kode_Compd, 
                    string Original_Kode_Compd_Act, 
                    string Original_Kode_Stamp_Tread, 
                    string Original_Kode_Stamp_Tread_Act, 
                    string Original_Compd_Cap, 
                    string Original_Compd_Cap_FM, 
                    string Original_Compd_Cap_RT, 
                    string Original_Compd_Base, 
                    string Original_Compd_Base_FM, 
                    string Original_Compd_Base_RT, 
                    string Original_Compd_Wing, 
                    string Original_Compd_Wing_FM, 
                    string Original_Compd_Wing_RT, 
                    string Original_Compd_Under_Tread, 
                    string Original_Compd_Under_Tread_FM, 
                    string Original_Compd_Under_Tread_RT, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Cap, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Cap_Act, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Base, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Base_Act, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Wing, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Wing_Act, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Undet_Tread, 
                    global::System.Nullable<decimal> Original_Speed_Screw_Undet_Tread_Act, 
                    global::System.Nullable<decimal> Original_Speed_Line, 
                    global::System.Nullable<decimal> Original_Speed_Line_Act, 
                    global::System.Nullable<int> Original_Total_Width, 
                    global::System.Nullable<int> Original_Total_Width_Setting, 
                    global::System.Nullable<int> Original_Total_Width_Setting_Act, 
                    global::System.Nullable<int> Original_Running_Scalle_1, 
                    global::System.Nullable<int> Original_Running_Scalle_1_Act, 
                    string Original_UserID, 
                    System.DateTime Original_Create_Date, 
                    bool Original_Statuss) {
            return this.Update(Original_Kode_Lot_Assurance_Front, Kode_Order_Tread, Kode_Spec_Tread, Kode_Size_Tread, Kode_Die_Tread, Kode_Die_Tread_Act, Machine, Preformer_No, Preformer_No_Act, Insert_No, Insert_No_Act, Kode_Compd, Kode_Compd_Act, Kode_Stamp_Tread, Kode_Stamp_Tread_Act, Compd_Cap, Compd_Cap_FM, Compd_Cap_RT, Compd_Base, Compd_Base_FM, Compd_Base_RT, Compd_Wing, Compd_Wing_FM, Compd_Wing_RT, Compd_Under_Tread, Compd_Under_Tread_FM, Compd_Under_Tread_RT, Speed_Screw_Cap, Speed_Screw_Cap_Act, Speed_Screw_Base, Speed_Screw_Base_Act, Speed_Screw_Wing, Speed_Screw_Wing_Act, Speed_Screw_Undet_Tread, Speed_Screw_Undet_Tread_Act, Speed_Line, Speed_Line_Act, Total_Width, Total_Width_Setting, Total_Width_Setting_Act, Running_Scalle_1, Running_Scalle_1_Act, UserID, Create_Date, Statuss, Original_Kode_Lot_Assurance_Front, Original_Kode_Order_Tread, Original_Kode_Spec_Tread, Original_Kode_Size_Tread, Original_Kode_Die_Tread, Original_Kode_Die_Tread_Act, Original_Machine, Original_Preformer_No, Original_Preformer_No_Act, Original_Insert_No, Original_Insert_No_Act, Original_Kode_Compd, Original_Kode_Compd_Act, Original_Kode_Stamp_Tread, Original_Kode_Stamp_Tread_Act, Original_Compd_Cap, Original_Compd_Cap_FM, Original_Compd_Cap_RT, Original_Compd_Base, Original_Compd_Base_FM, Original_Compd_Base_RT, Original_Compd_Wing, Original_Compd_Wing_FM, Original_Compd_Wing_RT, Original_Compd_Under_Tread, Original_Compd_Under_Tread_FM, Original_Compd_Under_Tread_RT, Original_Speed_Screw_Cap, Original_Speed_Screw_Cap_Act, Original_Speed_Screw_Base, Original_Speed_Screw_Base_Act, Original_Speed_Screw_Wing, Original_Speed_Screw_Wing_Act, Original_Speed_Screw_Undet_Tread, Original_Speed_Screw_Undet_Tread_Act, Original_Speed_Line, Original_Speed_Line_Act, Original_Total_Width, Original_Total_Width_Setting, Original_Total_Width_Setting_Act, Original_Running_Scalle_1, Original_Running_Scalle_1_Act, Original_UserID, Original_Create_Date, Original_Statuss);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private MASA_Lot_Assurance_Tread_FrontTableAdapter _mASA_Lot_Assurance_Tread_FrontTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MASA_Lot_Assurance_Tread_FrontTableAdapter MASA_Lot_Assurance_Tread_FrontTableAdapter {
            get {
                return this._mASA_Lot_Assurance_Tread_FrontTableAdapter;
            }
            set {
                this._mASA_Lot_Assurance_Tread_FrontTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._mASA_Lot_Assurance_Tread_FrontTableAdapter != null) 
                            && (this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Connection != null))) {
                    return this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._mASA_Lot_Assurance_Tread_FrontTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet_LotAssuranceTreadFront dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mASA_Lot_Assurance_Tread_FrontTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MASA_Lot_Assurance_Tread_Front.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet_LotAssuranceTreadFront dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mASA_Lot_Assurance_Tread_FrontTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MASA_Lot_Assurance_Tread_Front.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet_LotAssuranceTreadFront dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mASA_Lot_Assurance_Tread_FrontTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MASA_Lot_Assurance_Tread_Front.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet_LotAssuranceTreadFront dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._mASA_Lot_Assurance_Tread_FrontTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._mASA_Lot_Assurance_Tread_FrontTableAdapter != null)) {
                    revertConnections.Add(this._mASA_Lot_Assurance_Tread_FrontTableAdapter, this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Connection);
                    this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._mASA_Lot_Assurance_Tread_FrontTableAdapter != null)) {
                    this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mASA_Lot_Assurance_Tread_FrontTableAdapter]));
                    this._mASA_Lot_Assurance_Tread_FrontTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591